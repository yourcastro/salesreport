{"ast":null,"code":"define([\"../core\", \"../core/isAttached\", \"./var/rboxStyle\", \"./var/rnumnonpx\", \"./var/getStyles\", \"./support\"], function (jQuery, isAttached, rboxStyle, rnumnonpx, getStyles, support) {\n  \"use strict\";\n\n  function curCSS(elem, name, computed) {\n    var width,\n        minWidth,\n        maxWidth,\n        ret,\n        // Support: Firefox 51+\n    // Retrieving style before computed somehow\n    // fixes an issue with getting wrong values\n    // on detached elements\n    style = elem.style;\n    computed = computed || getStyles(elem); // getPropertyValue is needed for:\n    //   .css('filter') (IE 9 only, #12537)\n    //   .css('--customProperty) (#3144)\n\n    if (computed) {\n      ret = computed.getPropertyValue(name) || computed[name];\n\n      if (ret === \"\" && !isAttached(elem)) {\n        ret = jQuery.style(elem, name);\n      } // A tribute to the \"awesome hack by Dean Edwards\"\n      // Android Browser returns percentage for some values,\n      // but width seems to be reliably pixels.\n      // This is against the CSSOM draft spec:\n      // https://drafts.csswg.org/cssom/#resolved-values\n\n\n      if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {\n        // Remember the original values\n        width = style.width;\n        minWidth = style.minWidth;\n        maxWidth = style.maxWidth; // Put in the new values to get a computed value out\n\n        style.minWidth = style.maxWidth = style.width = ret;\n        ret = computed.width; // Revert the changed values\n\n        style.width = width;\n        style.minWidth = minWidth;\n        style.maxWidth = maxWidth;\n      }\n    }\n\n    return ret !== undefined ? // Support: IE <=9 - 11 only\n    // IE returns zIndex value as an integer.\n    ret + \"\" : ret;\n  }\n\n  return curCSS;\n});","map":{"version":3,"sources":["D:/Castro/Development/hr-management-portal/hr-management-portal/node_modules/jquery/src/css/curCSS.js"],"names":["define","jQuery","isAttached","rboxStyle","rnumnonpx","getStyles","support","curCSS","elem","name","computed","width","minWidth","maxWidth","ret","style","getPropertyValue","pixelBoxStyles","test","undefined"],"mappings":"AAAAA,MAAM,CAAE,CACP,SADO,EAEP,oBAFO,EAGP,iBAHO,EAIP,iBAJO,EAKP,iBALO,EAMP,WANO,CAAF,EAOH,UAAUC,MAAV,EAAkBC,UAAlB,EAA8BC,SAA9B,EAAyCC,SAAzC,EAAoDC,SAApD,EAA+DC,OAA/D,EAAyE;AAE5E;;AAEA,WAASC,MAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,QAA7B,EAAwC;AACvC,QAAIC,KAAJ;AAAA,QAAWC,QAAX;AAAA,QAAqBC,QAArB;AAAA,QAA+BC,GAA/B;AAAA,QAEC;AACA;AACA;AACA;AACAC,IAAAA,KAAK,GAAGP,IAAI,CAACO,KANd;AAQAL,IAAAA,QAAQ,GAAGA,QAAQ,IAAIL,SAAS,CAAEG,IAAF,CAAhC,CATuC,CAWvC;AACA;AACA;;AACA,QAAKE,QAAL,EAAgB;AACfI,MAAAA,GAAG,GAAGJ,QAAQ,CAACM,gBAAT,CAA2BP,IAA3B,KAAqCC,QAAQ,CAAED,IAAF,CAAnD;;AAEA,UAAKK,GAAG,KAAK,EAAR,IAAc,CAACZ,UAAU,CAAEM,IAAF,CAA9B,EAAyC;AACxCM,QAAAA,GAAG,GAAGb,MAAM,CAACc,KAAP,CAAcP,IAAd,EAAoBC,IAApB,CAAN;AACA,OALc,CAOf;AACA;AACA;AACA;AACA;;;AACA,UAAK,CAACH,OAAO,CAACW,cAAR,EAAD,IAA6Bb,SAAS,CAACc,IAAV,CAAgBJ,GAAhB,CAA7B,IAAsDX,SAAS,CAACe,IAAV,CAAgBT,IAAhB,CAA3D,EAAoF;AAEnF;AACAE,QAAAA,KAAK,GAAGI,KAAK,CAACJ,KAAd;AACAC,QAAAA,QAAQ,GAAGG,KAAK,CAACH,QAAjB;AACAC,QAAAA,QAAQ,GAAGE,KAAK,CAACF,QAAjB,CALmF,CAOnF;;AACAE,QAAAA,KAAK,CAACH,QAAN,GAAiBG,KAAK,CAACF,QAAN,GAAiBE,KAAK,CAACJ,KAAN,GAAcG,GAAhD;AACAA,QAAAA,GAAG,GAAGJ,QAAQ,CAACC,KAAf,CATmF,CAWnF;;AACAI,QAAAA,KAAK,CAACJ,KAAN,GAAcA,KAAd;AACAI,QAAAA,KAAK,CAACH,QAAN,GAAiBA,QAAjB;AACAG,QAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA;AACD;;AAED,WAAOC,GAAG,KAAKK,SAAR,GAEN;AACA;AACAL,IAAAA,GAAG,GAAG,EAJA,GAKNA,GALD;AAMA;;AAED,SAAOP,MAAP;AACC,CAhEK,CAAN","sourcesContent":["define( [\n\t\"../core\",\n\t\"../core/isAttached\",\n\t\"./var/rboxStyle\",\n\t\"./var/rnumnonpx\",\n\t\"./var/getStyles\",\n\t\"./support\"\n], function( jQuery, isAttached, rboxStyle, rnumnonpx, getStyles, support ) {\n\n\"use strict\";\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\nreturn curCSS;\n} );\n"]},"metadata":{},"sourceType":"script"}