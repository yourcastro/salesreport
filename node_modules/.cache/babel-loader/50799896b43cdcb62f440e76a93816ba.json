{"ast":null,"code":"/**\n * @hidden\n */\nexport var toRound = function (num, base) {\n  if (num % 1) {\n    var percent = Math.pow(10, (base.toString().split('.')[1] || base.toString().split('.')[0]).length);\n    return Math.round(num * percent) / percent;\n  }\n\n  return num;\n}; // Opting out of JS `modulo` calculation due to floating-point problems in JS\n// We're looking for the reminder - R.\n// x / y = a + R\n// R = (x / y) - a | *y\n// R = x - (y * a)\n// : a = Math.floor(x /y );\n\n/**\n * @hidden\n */\n\nexport var getRemainder = function (x, y) {\n  return x - y * Math.floor(x / y);\n};\n/**\n * @hidden\n */\n\nexport var isHalf = function (index, value, step) {\n  return toRound(index - step, step) < value && value < index;\n};\n/**\n * @hidden\n */\n\nexport var isSelected = function (index, value, step, selection) {\n  if (value === null) {\n    return false;\n  }\n\n  if (selection === 'continues') {\n    return isHalf(index, value, step) ? toRound(index - step / 2, step / 2) <= value : index <= value;\n  }\n\n  if (selection === 'single') {\n    return isHalf(index, value, step) ? toRound(index - step / 2, step / 2) === value : index === value;\n  }\n\n  return false;\n};\n/**\n * @hidden\n */\n\nexport var calcIsFirstHalf = function (dir, rect, clientX) {\n  return dir === 'ltr' ? clientX < rect.x + rect.width / 2 : clientX > rect.x + rect.width / 2;\n};\n/**\n * @hidden\n */\n\nexport var isCorrectValue = function (min, max, step, value) {\n  for (var i = min; i <= max; i += step) {\n    if (value === i) {\n      return true;\n    }\n  }\n\n  return false;\n};","map":{"version":3,"sources":["../../../../src/rating/utils/index.tsx"],"names":[],"mappings":"AAAA;;AAEG;AACH,OAAO,IAAM,OAAO,GAAG,UAAC,GAAD,EAAc,IAAd,EAA0B;AAC7C,MAAI,GAAG,GAAG,CAAV,EAAa;AACT,QAAM,OAAO,GAAG,IAAI,CAAC,GAAL,CAAS,EAAT,EAAa,CAAC,IAAI,CAAC,QAAL,GAAgB,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,KAAiC,IAAI,CAAC,QAAL,GAAgB,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAlC,EAAiE,MAA9E,CAAhB;AACA,WAAO,IAAI,CAAC,KAAL,CAAW,GAAG,GAAG,OAAjB,IAA4B,OAAnC;AACH;;AACD,SAAO,GAAP;AACH,CANM,C,CAQP;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEG;;AACH,OAAO,IAAM,YAAY,GAAG,UAAC,CAAD,EAAY,CAAZ,EAAqB;AAAK,SAAA,CAAC,GAAI,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,GAArB,CAAS,CAAT;AAA2B,CAA1E;AAEP;;AAEG;;AACH,OAAO,IAAM,MAAM,GAAG,UAAC,KAAD,EAAgB,KAAhB,EAA+B,IAA/B,EAA2C;AAC7D,SAAQ,OAAO,CAAC,KAAK,GAAG,IAAT,EAAe,IAAf,CAAP,GAA8B,KAA/B,IAA0C,KAAK,GAAG,KAAzD;AACH,CAFM;AAIP;;AAEG;;AACH,OAAO,IAAM,UAAU,GAAG,UAAC,KAAD,EAAgB,KAAhB,EAAsC,IAAtC,EAAoD,SAApD,EAAqF;AAC3G,MAAI,KAAK,KAAK,IAAd,EAAoB;AAAE,WAAO,KAAP;AAAe;;AACrC,MAAI,SAAS,KAAK,WAAlB,EAA+B;AAC3B,WAAO,MAAM,CAAC,KAAD,EAAQ,KAAR,EAAe,IAAf,CAAN,GACD,OAAO,CAAC,KAAK,GAAG,IAAI,GAAG,CAAhB,EAAmB,IAAI,GAAG,CAA1B,CAAP,IAAuC,KADtC,GAED,KAAK,IAAI,KAFf;AAGH;;AACD,MAAI,SAAS,KAAK,QAAlB,EAA4B;AACxB,WAAO,MAAM,CAAC,KAAD,EAAQ,KAAR,EAAe,IAAf,CAAN,GACD,OAAO,CAAC,KAAK,GAAG,IAAI,GAAG,CAAhB,EAAmB,IAAI,GAAG,CAA1B,CAAP,KAAwC,KADvC,GAED,KAAK,KAAK,KAFhB;AAGH;;AACD,SAAO,KAAP;AACH,CAbM;AAeP;;AAEG;;AACH,OAAO,IAAM,eAAe,GAAG,UAAC,GAAD,EAAc,IAAd,EAAoB,OAApB,EAAmC;AAC9D,SAAO,GAAG,KAAK,KAAR,GACD,OAAO,GAAI,IAAI,CAAC,CAAL,GAAU,IAAI,CAAC,KAAL,GAAa,CADjC,GAED,OAAO,GAAI,IAAI,CAAC,CAAL,GAAU,IAAI,CAAC,KAAL,GAAa,CAFxC;AAGH,CAJM;AAMP;;AAEG;;AACH,OAAO,IAAM,cAAc,GAAG,UAAC,GAAD,EAAc,GAAd,EAA2B,IAA3B,EAAyC,KAAzC,EAAsD;AAChF,OAAK,IAAI,CAAC,GAAG,GAAb,EAAkB,CAAC,IAAI,GAAvB,EAA4B,CAAC,IAAI,IAAjC,EAAuC;AACnC,QAAI,KAAK,KAAK,CAAd,EAAiB;AAAE,aAAO,IAAP;AAAc;AACpC;;AACD,SAAO,KAAP;AACH,CALM","sourceRoot":"","sourcesContent":["/**\n * @hidden\n */\nexport var toRound = function (num, base) {\n    if (num % 1) {\n        var percent = Math.pow(10, (base.toString().split('.')[1] || base.toString().split('.')[0]).length);\n        return Math.round(num * percent) / percent;\n    }\n    return num;\n};\n// Opting out of JS `modulo` calculation due to floating-point problems in JS\n// We're looking for the reminder - R.\n// x / y = a + R\n// R = (x / y) - a | *y\n// R = x - (y * a)\n// : a = Math.floor(x /y );\n/**\n * @hidden\n */\nexport var getRemainder = function (x, y) { return x - (y * Math.floor(x / y)); };\n/**\n * @hidden\n */\nexport var isHalf = function (index, value, step) {\n    return (toRound(index - step, step) < value) && (value < index);\n};\n/**\n * @hidden\n */\nexport var isSelected = function (index, value, step, selection) {\n    if (value === null) {\n        return false;\n    }\n    if (selection === 'continues') {\n        return isHalf(index, value, step)\n            ? toRound(index - step / 2, step / 2) <= value\n            : index <= value;\n    }\n    if (selection === 'single') {\n        return isHalf(index, value, step)\n            ? toRound(index - step / 2, step / 2) === value\n            : index === value;\n    }\n    return false;\n};\n/**\n * @hidden\n */\nexport var calcIsFirstHalf = function (dir, rect, clientX) {\n    return dir === 'ltr'\n        ? clientX < (rect.x + (rect.width / 2))\n        : clientX > (rect.x + (rect.width / 2));\n};\n/**\n * @hidden\n */\nexport var isCorrectValue = function (min, max, step, value) {\n    for (var i = min; i <= max; i += step) {\n        if (value === i) {\n            return true;\n        }\n    }\n    return false;\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}