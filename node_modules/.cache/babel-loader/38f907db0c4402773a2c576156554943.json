{"ast":null,"code":"var _jsxFileName = \"D:\\\\Castro\\\\Development\\\\hr-management-portal\\\\hr-management-portal\\\\src\\\\employeeDashboard.js\";\nimport React from 'react';\nimport { mockEmployee } from \"./employeeMockData\";\nimport Table from 'react-responsive-data-table';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EmployeeDashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [...mockEmployee],\n      openModal: false,\n      currentRow: null\n    };\n\n    this.onRowEdit = row => {\n      console.log(row);\n      this.setState({\n        currentRow: row\n      });\n      this.onOpenModal();\n    };\n\n    this.onRowUpdate = row => {\n      console.log(row);\n      let oRow = this.state.currentRow; //this.setState({ currentRow: row });\n\n      this.onCloseModal();\n    };\n\n    this.onRowDelete = row => {\n      console.log(row);\n      let oRow = this.state.currentRow;\n      let id = oRow[0];\n      let odata = this.state.data.filter(x => x.id != id);\n      this.setState({\n        data: odata\n      });\n      this.onCloseModal();\n      alert('Deleted Successfully !');\n    };\n\n    this.onHandleChange = row => {\n      console.log(row);\n    };\n\n    this.onOpenModal = () => {\n      this.setState({\n        openModal: true\n      });\n    };\n\n    this.onCloseModal = () => {\n      this.setState({\n        openModal: false\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    let dataGrid = this.state.data;\n    let id = this.state.currentRow != null ? this.state.currentRow[0] : \"\";\n    let userName = this.state.currentRow != null ? this.state.currentRow[1] : \"\";\n    let fullName = this.state.currentRow != null ? this.state.currentRow[2] : \"\";\n    let salary = this.state.currentRow != null ? this.state.currentRow[3] : \"\";\n\n    if (dataGrid) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employeeDashboardConatiner\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          style: {\n            opacity: 0.8,\n            backgroundColor: \"#00113a\",\n            color: \"#ffffff\",\n            textAlign: \"center\"\n          },\n          tableStyle: \"table table-hover table-striped table-bordered table-borderless table-responsive\",\n          pages: true,\n          pagination: true,\n          onRowClick: row => this.onRowEdit(row),\n          page: true,\n          errormsg: \"Error. . .\",\n          loadingmsg: \"Loading. . .\",\n          isLoading: false,\n          sort: true,\n          title: \"Employee\",\n          search: true,\n          size: 5,\n          data: {\n            head: {\n              id: \"ID\",\n              username: \"User Name\",\n              fullName: \"Full Name\",\n              salary: \"Salary\"\n            },\n            data: [...dataGrid]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Modal, {\n            open: this.state.openModal,\n            onClose: this.onCloseModal,\n            center: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modalForm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"modalHeader\",\n                children: \"Edit Employee Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  for: \"fname\",\n                  children: \"ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"txtID\",\n                  disabled: \"disabled\",\n                  value: id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  for: \"fname\",\n                  children: \"User Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"txtUserName\",\n                  disabled: \"disabled\",\n                  value: userName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  for: \"fname\",\n                  children: \"Full Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"txtFullName\",\n                  value: fullName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  for: \"fname\",\n                  children: \"Salary:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"txtSalary\",\n                  value: salary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"button\",\n                  id: \"btnSave\",\n                  className: \"btnSave\",\n                  value: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"button\",\n                  id: \"btnCancel\",\n                  className: \"btnDelete\",\n                  value: \"Delete\",\n                  onClick: this.onRowDelete\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nexport default EmployeeDashboard;","map":{"version":3,"sources":["D:/Castro/Development/hr-management-portal/hr-management-portal/src/employeeDashboard.js"],"names":["React","mockEmployee","Table","Modal","EmployeeDashboard","Component","state","data","openModal","currentRow","onRowEdit","row","console","log","setState","onOpenModal","onRowUpdate","oRow","onCloseModal","onRowDelete","id","odata","filter","x","alert","onHandleChange","componentDidMount","render","dataGrid","userName","fullName","salary","opacity","backgroundColor","color","textAlign","head","username"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { mockEmployee } from \"./employeeMockData\";\r\nimport Table from 'react-responsive-data-table';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\n\r\nclass EmployeeDashboard extends React.Component {\r\n\r\n  state = {\r\n    data: [...mockEmployee],\r\n    openModal:false,\r\n    currentRow: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  \r\n  onRowEdit = (row) => {\r\n    console.log(row);\r\n    this.setState({ currentRow: row });\r\n    this.onOpenModal();\r\n  };\r\n\r\n  onRowUpdate = (row) => {\r\n    console.log(row);\r\n    let oRow = this.state.currentRow;\r\n    //this.setState({ currentRow: row });\r\n    this.onCloseModal();\r\n  };\r\n\r\n  onRowDelete = (row) => {\r\n    console.log(row);\r\n    let oRow = this.state.currentRow;\r\n    let id = oRow[0];\r\n    let odata = this.state.data.filter(x => x.id != id);\r\n    this.setState({ data: odata });\r\n    this.onCloseModal();\r\n    alert('Deleted Successfully !');\r\n  };\r\n\r\n  onHandleChange = (row) => {\r\n    console.log(row);\r\n  };\r\n\r\n  onOpenModal = () => {\r\n    this.setState({ openModal: true });\r\n  };\r\n\r\n  onCloseModal = () => {\r\n    this.setState({ openModal: false });\r\n  };\r\n\r\n  \r\n  \r\n  render() {\r\n\r\n    let dataGrid = this.state.data;\r\n    let id = this.state.currentRow != null ? this.state.currentRow[0] : \"\";\r\n    let userName = this.state.currentRow != null ? this.state.currentRow[1] : \"\";\r\n    let fullName = this.state.currentRow != null ? this.state.currentRow[2] : \"\";\r\n    let salary = this.state.currentRow != null ? this.state.currentRow[3] : \"\";\r\n\r\n    if (dataGrid) {\r\n      return (\r\n        <div className=\"employeeDashboardConatiner\">\r\n          <Table style={{\r\n            opacity: 0.8,\r\n            backgroundColor: \"#00113a\",\r\n            color: \"#ffffff\",\r\n            textAlign: \"center\"\r\n          }}\r\n            tableStyle=\"table table-hover table-striped table-bordered table-borderless table-responsive\"\r\n            pages={true}\r\n            pagination={true}\r\n            onRowClick={row => this.onRowEdit(row)}\r\n            page={true}\r\n            errormsg=\"Error. . .\"\r\n            loadingmsg=\"Loading. . .\"\r\n            isLoading={false}\r\n            sort={true}\r\n            title=\"Employee\"\r\n            search={true}\r\n            size={5}\r\n            data={{\r\n              head: {\r\n                id: \"ID\",\r\n                username: \"User Name\",\r\n                fullName: \"Full Name\",\r\n                salary: \"Salary\"\r\n              },\r\n              data: [...dataGrid]\r\n            }} />\r\n\r\n          <div>\r\n            <Modal open={this.state.openModal} onClose={this.onCloseModal} center>\r\n              <div className=\"modalForm\">\r\n                <span className=\"modalHeader\">Edit Employee Details</span>\r\n                <div>\r\n                  <span for=\"fname\">ID:</span>\r\n                  <input type=\"text\" id=\"txtID\" disabled=\"disabled\" value={id}></input>\r\n                </div>\r\n                <div>\r\n                  <span for=\"fname\">User Name:</span>\r\n                  <input type=\"text\" id=\"txtUserName\" disabled=\"disabled\" value={userName}></input>\r\n                </div>\r\n                <div>\r\n                  <span for=\"fname\">Full Name:</span>\r\n                  <input type=\"text\" id=\"txtFullName\" value={fullName}></input>\r\n                </div>\r\n                <div>\r\n                  <span for=\"fname\">Salary:</span>\r\n                  <input type=\"text\" id=\"txtSalary\" value={salary}></input>\r\n                </div>\r\n                <div>\r\n                  <input type=\"button\" id=\"btnSave\" className=\"btnSave\" value=\"Update\"></input>\r\n                  <input type=\"button\" id=\"btnCancel\" className=\"btnDelete\" value=\"Delete\" onClick={this.onRowDelete}></input>\r\n                </div>\r\n              </div>\r\n            </Modal>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      );\r\n    }\r\n    else {\r\n      return <div></div>\r\n    }\r\n\r\n    \r\n  }\r\n\r\n}\r\n\r\n\r\nexport default EmployeeDashboard;\r\n\r\n"]},"metadata":{},"sourceType":"module"}