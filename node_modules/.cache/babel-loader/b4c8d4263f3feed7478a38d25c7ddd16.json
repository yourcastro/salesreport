{"ast":null,"code":"define([\"../core\", \"../var/document\", \"./var/rsingleTag\", \"../manipulation/buildFragment\", // This is the only module that needs core/support\n\"./support\"], function (jQuery, document, rsingleTag, buildFragment, support) {\n  \"use strict\"; // Argument \"data\" should be string of html\n  // context (optional): If specified, the fragment will be created in this context,\n  // defaults to document\n  // keepScripts (optional): If true, will include scripts passed in the html string\n\n  jQuery.parseHTML = function (data, context, keepScripts) {\n    if (typeof data !== \"string\") {\n      return [];\n    }\n\n    if (typeof context === \"boolean\") {\n      keepScripts = context;\n      context = false;\n    }\n\n    var base, parsed, scripts;\n\n    if (!context) {\n      // Stop scripts or inline event handlers from being executed immediately\n      // by using document.implementation\n      if (support.createHTMLDocument) {\n        context = document.implementation.createHTMLDocument(\"\"); // Set the base href for the created document\n        // so any parsed elements with URLs\n        // are based on the document's URL (gh-2965)\n\n        base = context.createElement(\"base\");\n        base.href = document.location.href;\n        context.head.appendChild(base);\n      } else {\n        context = document;\n      }\n    }\n\n    parsed = rsingleTag.exec(data);\n    scripts = !keepScripts && []; // Single tag\n\n    if (parsed) {\n      return [context.createElement(parsed[1])];\n    }\n\n    parsed = buildFragment([data], context, scripts);\n\n    if (scripts && scripts.length) {\n      jQuery(scripts).remove();\n    }\n\n    return jQuery.merge([], parsed.childNodes);\n  };\n\n  return jQuery.parseHTML;\n});","map":{"version":3,"sources":["D:/Castro/Development/hr-management-portal/hr-management-portal/node_modules/jquery/src/core/parseHTML.js"],"names":["define","jQuery","document","rsingleTag","buildFragment","support","parseHTML","data","context","keepScripts","base","parsed","scripts","createHTMLDocument","implementation","createElement","href","location","head","appendChild","exec","length","remove","merge","childNodes"],"mappings":"AAAAA,MAAM,CAAE,CACP,SADO,EAEP,iBAFO,EAGP,kBAHO,EAIP,+BAJO,EAMP;AACA,WAPO,CAAF,EAQH,UAAUC,MAAV,EAAkBC,QAAlB,EAA4BC,UAA5B,EAAwCC,aAAxC,EAAuDC,OAAvD,EAAiE;AAEpE,eAFoE,CAIpE;AACA;AACA;AACA;;AACAJ,EAAAA,MAAM,CAACK,SAAP,GAAmB,UAAUC,IAAV,EAAgBC,OAAhB,EAAyBC,WAAzB,EAAuC;AACzD,QAAK,OAAOF,IAAP,KAAgB,QAArB,EAAgC;AAC/B,aAAO,EAAP;AACA;;AACD,QAAK,OAAOC,OAAP,KAAmB,SAAxB,EAAoC;AACnCC,MAAAA,WAAW,GAAGD,OAAd;AACAA,MAAAA,OAAO,GAAG,KAAV;AACA;;AAED,QAAIE,IAAJ,EAAUC,MAAV,EAAkBC,OAAlB;;AAEA,QAAK,CAACJ,OAAN,EAAgB;AAEf;AACA;AACA,UAAKH,OAAO,CAACQ,kBAAb,EAAkC;AACjCL,QAAAA,OAAO,GAAGN,QAAQ,CAACY,cAAT,CAAwBD,kBAAxB,CAA4C,EAA5C,CAAV,CADiC,CAGjC;AACA;AACA;;AACAH,QAAAA,IAAI,GAAGF,OAAO,CAACO,aAAR,CAAuB,MAAvB,CAAP;AACAL,QAAAA,IAAI,CAACM,IAAL,GAAYd,QAAQ,CAACe,QAAT,CAAkBD,IAA9B;AACAR,QAAAA,OAAO,CAACU,IAAR,CAAaC,WAAb,CAA0BT,IAA1B;AACA,OATD,MASO;AACNF,QAAAA,OAAO,GAAGN,QAAV;AACA;AACD;;AAEDS,IAAAA,MAAM,GAAGR,UAAU,CAACiB,IAAX,CAAiBb,IAAjB,CAAT;AACAK,IAAAA,OAAO,GAAG,CAACH,WAAD,IAAgB,EAA1B,CA9ByD,CAgCzD;;AACA,QAAKE,MAAL,EAAc;AACb,aAAO,CAAEH,OAAO,CAACO,aAAR,CAAuBJ,MAAM,CAAE,CAAF,CAA7B,CAAF,CAAP;AACA;;AAEDA,IAAAA,MAAM,GAAGP,aAAa,CAAE,CAAEG,IAAF,CAAF,EAAYC,OAAZ,EAAqBI,OAArB,CAAtB;;AAEA,QAAKA,OAAO,IAAIA,OAAO,CAACS,MAAxB,EAAiC;AAChCpB,MAAAA,MAAM,CAAEW,OAAF,CAAN,CAAkBU,MAAlB;AACA;;AAED,WAAOrB,MAAM,CAACsB,KAAP,CAAc,EAAd,EAAkBZ,MAAM,CAACa,UAAzB,CAAP;AACA,GA5CD;;AA8CA,SAAOvB,MAAM,CAACK,SAAd;AAEC,CAhEK,CAAN","sourcesContent":["define( [\n\t\"../core\",\n\t\"../var/document\",\n\t\"./var/rsingleTag\",\n\t\"../manipulation/buildFragment\",\n\n\t// This is the only module that needs core/support\n\t\"./support\"\n], function( jQuery, document, rsingleTag, buildFragment, support ) {\n\n\"use strict\";\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\nreturn jQuery.parseHTML;\n\n} );\n"]},"metadata":{},"sourceType":"script"}