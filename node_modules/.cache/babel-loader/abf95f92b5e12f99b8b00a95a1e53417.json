{"ast":null,"code":"define([\"../../core\", \"../../core/isAttached\" // css is assumed\n], function (jQuery, isAttached) {\n  \"use strict\"; // isHiddenWithinTree reports if an element has a non-\"none\" display style (inline and/or\n  // through the CSS cascade), which is useful in deciding whether or not to make it visible.\n  // It differs from the :hidden selector (jQuery.expr.pseudos.hidden) in two important ways:\n  // * A hidden ancestor does not force an element to be classified as hidden.\n  // * Being disconnected from the document does not force an element to be classified as hidden.\n  // These differences improve the behavior of .toggle() et al. when applied to elements that are\n  // detached or contained within hidden ancestors (gh-2404, gh-2863).\n\n  return function (elem, el) {\n    // isHiddenWithinTree might be called from jQuery#filter function;\n    // in that case, element will be second argument\n    elem = el || elem; // Inline style trumps all\n\n    return elem.style.display === \"none\" || elem.style.display === \"\" && // Otherwise, check computed style\n    // Support: Firefox <=43 - 45\n    // Disconnected elements can have computed display: none, so first confirm that elem is\n    // in the document.\n    isAttached(elem) && jQuery.css(elem, \"display\") === \"none\";\n  };\n});","map":{"version":3,"sources":["D:/Castro/Development/hr-management-portal/hr-management-portal/node_modules/jquery/src/css/var/isHiddenWithinTree.js"],"names":["define","jQuery","isAttached","elem","el","style","display","css"],"mappings":"AAAAA,MAAM,CAAE,CACP,YADO,EAEP,uBAFO,CAIP;AAJO,CAAF,EAKH,UAAUC,MAAV,EAAkBC,UAAlB,EAA+B;AACjC,eADiC,CAGjC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAO,UAAUC,IAAV,EAAgBC,EAAhB,EAAqB;AAE3B;AACA;AACAD,IAAAA,IAAI,GAAGC,EAAE,IAAID,IAAb,CAJ2B,CAM3B;;AACA,WAAOA,IAAI,CAACE,KAAL,CAAWC,OAAX,KAAuB,MAAvB,IACNH,IAAI,CAACE,KAAL,CAAWC,OAAX,KAAuB,EAAvB,IAEA;AACA;AACA;AACA;AACAJ,IAAAA,UAAU,CAAEC,IAAF,CANV,IAQAF,MAAM,CAACM,GAAP,CAAYJ,IAAZ,EAAkB,SAAlB,MAAkC,MATnC;AAUA,GAjBD;AAkBA,CAjCK,CAAN","sourcesContent":["define( [\n\t\"../../core\",\n\t\"../../core/isAttached\"\n\n\t// css is assumed\n], function( jQuery, isAttached ) {\n\t\"use strict\";\n\n\t// isHiddenWithinTree reports if an element has a non-\"none\" display style (inline and/or\n\t// through the CSS cascade), which is useful in deciding whether or not to make it visible.\n\t// It differs from the :hidden selector (jQuery.expr.pseudos.hidden) in two important ways:\n\t// * A hidden ancestor does not force an element to be classified as hidden.\n\t// * Being disconnected from the document does not force an element to be classified as hidden.\n\t// These differences improve the behavior of .toggle() et al. when applied to elements that are\n\t// detached or contained within hidden ancestors (gh-2404, gh-2863).\n\treturn function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tisAttached( elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n} );\n"]},"metadata":{},"sourceType":"script"}