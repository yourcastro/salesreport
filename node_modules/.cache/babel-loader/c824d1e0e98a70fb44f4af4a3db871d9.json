{"ast":null,"code":"var _jsxFileName = \"D:\\\\Castro\\\\Development\\\\hr-management-portal\\\\hr-management-portal\\\\src\\\\employeeDashboard.js\";\nimport React from 'react';\nimport * as ReactDOM from \"react-dom\";\nimport { Grid, GridColumn as Column, GridToolbar } from \"@progress/kendo-react-grid\";\nimport { MyCommandCell } from \"./myCommandCell\";\nimport { insertItem, getItems, updateItem, deleteItem } from \"./services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EmployeeDashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n\n    this.CommandCell = props => /*#__PURE__*/_jsxDEV(MyCommandCell, { ...props,\n      edit: this.enterEdit,\n      remove: this.remove,\n      add: this.add,\n      discard: this.discard,\n      update: this.update,\n      cancel: this.cancel,\n      editField: editField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this);\n\n    this.remove = dataItem => {\n      const data = deleteItem(dataItem);\n      this.setState({\n        data\n      });\n    };\n\n    this.add = dataItem => {\n      dataItem.inEdit = true;\n      const data = insertItem(dataItem);\n      this.setState({\n        data: data\n      });\n    };\n\n    this.update = dataItem => {\n      dataItem.inEdit = false;\n      const data = updateItem(dataItem);\n      this.setState({\n        data\n      });\n    };\n\n    this.discard = () => {\n      const data = [...this.state.data];\n      data.splice(0, 1);\n      this.setState({\n        data\n      });\n    };\n\n    this.cancel = dataItem => {\n      const originalItem = getItems().find(p => p.ProductID === dataItem.ProductID);\n      const data = this.state.data.map(item => item.ProductID === originalItem.ProductID ? originalItem : item);\n      this.setState({\n        data\n      });\n    };\n\n    this.enterEdit = dataItem => {\n      this.setState({\n        data: this.state.data.map(item => item.ProductID === dataItem.ProductID ? { ...item,\n          inEdit: true\n        } : item)\n      });\n    };\n\n    this.itemChange = event => {\n      const data = this.state.data.map(item => item.ProductID === event.dataItem.ProductID ? { ...item,\n        [event.field || \"\"]: event.value\n      } : item);\n      this.setState({\n        data\n      });\n    };\n\n    this.addNew = () => {\n      const newDataItem = {\n        inEdit: true,\n        Discontinued: false\n      };\n      this.setState({\n        data: [newDataItem, ...this.state.data]\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: getItems()\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        height: \"420px\"\n      },\n      data: this.state.data,\n      onItemChange: this.itemChange,\n      editField: editField,\n      children: [/*#__PURE__*/_jsxDEV(GridToolbar, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"Add new\",\n          className: \"k-button k-primary\",\n          onClick: this.addNew,\n          children: \"Add new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"ProductID\",\n        title: \"Id\",\n        width: \"50px\",\n        editable: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"ProductName\",\n        title: \"Product Name\",\n        width: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"FirstOrderedOn\",\n        title: \"First Ordered\",\n        editor: \"date\",\n        format: \"{0:d}\",\n        width: \"150px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"UnitsInStock\",\n        title: \"Units\",\n        width: \"120px\",\n        editor: \"numeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        field: \"Discontinued\",\n        title: \"Discontinued\",\n        editor: \"boolean\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        cell: this.CommandCell,\n        width: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EmployeeDashboard;","map":{"version":3,"sources":["D:/Castro/Development/hr-management-portal/hr-management-portal/src/employeeDashboard.js"],"names":["React","ReactDOM","Grid","GridColumn","Column","GridToolbar","MyCommandCell","insertItem","getItems","updateItem","deleteItem","EmployeeDashboard","Component","state","data","CommandCell","props","enterEdit","remove","add","discard","update","cancel","editField","dataItem","setState","inEdit","splice","originalItem","find","p","ProductID","map","item","itemChange","event","field","value","addNew","newDataItem","Discontinued","componentDidMount","render","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as ReactDOM from \"react-dom\";\r\nimport {\r\n  Grid,\r\n  GridColumn as Column,\r\n  GridToolbar,\r\n} from \"@progress/kendo-react-grid\";\r\n\r\nimport { MyCommandCell } from \"./myCommandCell\";\r\nimport { insertItem, getItems, updateItem, deleteItem } from \"./services\";\r\n\r\nclass EmployeeDashboard extends React.Component {\r\n  state = {\r\n    data: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      data: getItems(),\r\n    });\r\n  }\r\n\r\n  CommandCell = (props) => (\r\n    <MyCommandCell\r\n      {...props}\r\n      edit={this.enterEdit}\r\n      remove={this.remove}\r\n      add={this.add}\r\n      discard={this.discard}\r\n      update={this.update}\r\n      cancel={this.cancel}\r\n      editField={editField}\r\n    />\r\n  );\r\n\r\n  remove = (dataItem) => {\r\n    const data = deleteItem(dataItem);\r\n    this.setState({\r\n      data,\r\n    });\r\n  };\r\n\r\n  add = (dataItem) => {\r\n    dataItem.inEdit = true;\r\n    const data = insertItem(dataItem);\r\n    this.setState({\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  update = (dataItem) => {\r\n    dataItem.inEdit = false;\r\n    const data = updateItem(dataItem);\r\n    this.setState({\r\n      data,\r\n    });\r\n  };\r\n\r\n  discard = () => {\r\n    const data = [...this.state.data];\r\n    data.splice(0, 1);\r\n    this.setState({\r\n      data,\r\n    });\r\n  };\r\n\r\n  cancel = (dataItem) => {\r\n    const originalItem = getItems().find(\r\n      (p) => p.ProductID === dataItem.ProductID\r\n    );\r\n    const data = this.state.data.map((item) =>\r\n      item.ProductID === originalItem.ProductID ? originalItem : item\r\n    );\r\n    this.setState({\r\n      data,\r\n    });\r\n  };\r\n\r\n  enterEdit = (dataItem) => {\r\n    this.setState({\r\n      data: this.state.data.map((item) =>\r\n        item.ProductID === dataItem.ProductID ? { ...item, inEdit: true } : item\r\n      ),\r\n    });\r\n  };\r\n\r\n  itemChange = (event) => {\r\n    const data = this.state.data.map((item) =>\r\n      item.ProductID === event.dataItem.ProductID\r\n        ? { ...item, [event.field || \"\"]: event.value }\r\n        : item\r\n    );\r\n    this.setState({\r\n      data,\r\n    });\r\n  };\r\n\r\n  addNew = () => {\r\n    const newDataItem = {\r\n      inEdit: true,\r\n      Discontinued: false,\r\n    };\r\n    this.setState({\r\n      data: [newDataItem, ...this.state.data],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid\r\n        style={{\r\n          height: \"420px\",\r\n        }}\r\n        data={this.state.data}\r\n        onItemChange={this.itemChange}\r\n        editField={editField}\r\n      >\r\n        <GridToolbar>\r\n          <button\r\n            title=\"Add new\"\r\n            className=\"k-button k-primary\"\r\n            onClick={this.addNew}\r\n          >\r\n            Add new\r\n          </button>\r\n        </GridToolbar>\r\n        <Column field=\"ProductID\" title=\"Id\" width=\"50px\" editable={false} />\r\n        <Column field=\"ProductName\" title=\"Product Name\" width=\"200px\" />\r\n        <Column\r\n          field=\"FirstOrderedOn\"\r\n          title=\"First Ordered\"\r\n          editor=\"date\"\r\n          format=\"{0:d}\"\r\n          width=\"150px\"\r\n        />\r\n        <Column\r\n          field=\"UnitsInStock\"\r\n          title=\"Units\"\r\n          width=\"120px\"\r\n          editor=\"numeric\"\r\n        />\r\n        <Column field=\"Discontinued\" title=\"Discontinued\" editor=\"boolean\" />\r\n        <Column cell={this.CommandCell} width=\"200px\" />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default EmployeeDashboard;\r\n\r\n"]},"metadata":{},"sourceType":"module"}