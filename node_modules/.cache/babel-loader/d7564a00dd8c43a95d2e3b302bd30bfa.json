{"ast":null,"code":"import _regeneratorRuntime from\"D:/Castro/Development/hr-management-portal/hr-management-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Castro/Development/hr-management-portal/hr-management-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"D:/Castro/Development/hr-management-portal/hr-management-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/Castro/Development/hr-management-portal/hr-management-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/Castro/Development/hr-management-portal/hr-management-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/Castro/Development/hr-management-portal/hr-management-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import axios from'axios';import*as XLSX from'xlsx';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UserUpload=/*#__PURE__*/function(_Component){_inherits(UserUpload,_Component);var _super=_createSuper(UserUpload);function UserUpload(){var _this;_classCallCheck(this,UserUpload);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={selectedFile:null,allEmployee:[]};_this.onFileChange=function(event){var fileType=event.target.files[0].type;var fileSize=event.target.files[0].size;var actualFileSize=Math.round(fileSize/1024);if(fileType===\"application/vnd.ms-excel\"){if(actualFileSize<=2048){_this.setState({selectedFile:event.target.files[0]});}else{_this.setState({selectedFile:null});alert(\"File too big, please select a file lesser than 2mb\");}}else{_this.setState({selectedFile:null});alert(\"File format not supported, please select only CSV file\");}};_this.onFileValidationNUpdate=function(){//Read data from CSV\nvar validationCounter=0;var f=_this.state.selectedFile;var reader=new FileReader();reader.onload=function(evt){var bstr=evt.target.result;var wb=XLSX.read(bstr,{type:\"binary\"});var wsname=wb.SheetNames[0];var ws=wb.Sheets[wsname];var data=XLSX.utils.sheet_to_csv(ws,{header:1});var employeeDataJSON=_this.convertToJson(data);var parsedJSON=JSON.parse(employeeDataJSON);var _loop=function _loop(emp){var item=parsedJSON[emp];if(item&&item.id!==\"\"){//Any row starting with “#” is considered a comment and ignored.\nif(item.id!==\"#\"){var allEmployeeData=_this.state.allEmployee;var checkEmpExist=allEmployeeData.find(function(x){return x.id===item.id&&x.username===item.username;});if(checkEmpExist){//Update Emp Record\n_this.updateEmpRecord(item);}else{//Create New Emp Record\n_this.createEmpRecord(item);}}}else{validationCounter++;}};for(var emp in parsedJSON){_loop(emp);}};reader.readAsBinaryString(f);//one or more of the rows fails validation, the entire file is rejected\nif(validationCounter<=1){_this.onFileUpload();}};_this.createEmpRecord=function(emp){try{var resp=axios.post('https://nphc-hr.free.beeceptor.com/employees',emp);alert('New Employee created');}catch(err){// Handle Error Here\nalert('New Employee Service failed '+err);}};_this.updateEmpRecord=function(emp){try{var resp=axios.put('https://nphc-hr.free.beeceptor.com/employees/'+emp.id,{emp:emp});alert('Employee details updated');}catch(err){// Handle Error Here\nalert('Employee Update Service failed '+err);}};_this.onFileUpload=function(){// File Upload to Backend\nvar formData=new FormData();formData.append(\"myFile\",_this.state.selectedFile,_this.state.selectedFile.name);console.log(_this.state.selectedFile);var sendPostRequest=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var resp;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post('https://nphc-hr.free.beeceptor.com/employees/upload',formData);case 3:resp=_context.sent;alert('File upload sucessfully '+resp.status);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);// Handle Error Here\nalert('File upload failed '+_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function sendPostRequest(){return _ref.apply(this,arguments);};}();sendPostRequest();};_this.fileData=function(){if(_this.state.selectedFile){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"File Details:\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"File Name: \",_this.state.selectedFile.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"File Type: \",_this.state.selectedFile.type]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Last Modified:\",\" \",_this.state.selectedFile.lastModifiedDate.toDateString()]})]});}else{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h4\",{children:\"Please select file before pressing the upload button\"})]});}};return _this;}_createClass(UserUpload,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;//Load All Employees\naxios.get('https://nphc-hr.free.beeceptor.com/employees').then(function(res){var employee=res.data;_this2.setState({allEmployee:employee});});}},{key:\"convertToJson\",value:function convertToJson(csv){var lines=csv.split(\"\\n\");var result=[];var headers=lines[0].split(\",\");for(var i=1;i<lines.length;i++){var obj={};var currentline=lines[i].split(\",\");for(var j=0;j<headers.length;j++){obj[headers[j]]=currentline[j];}result.push(obj);}//return result; //JavaScript object\nreturn JSON.stringify(result);//JSON\n}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"fileUploadContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:this.onFileChange}),/*#__PURE__*/_jsx(\"button\",{onClick:this.onFileValidationNUpdate,children:\"Upload\"})]}),this.fileData()]});}}]);return UserUpload;}(Component);export default UserUpload;","map":{"version":3,"sources":["D:/Castro/Development/hr-management-portal/hr-management-portal/src/uploadUser.js"],"names":["React","Component","axios","XLSX","UserUpload","state","selectedFile","allEmployee","onFileChange","event","fileType","target","files","type","fileSize","size","actualFileSize","Math","round","setState","alert","onFileValidationNUpdate","validationCounter","f","reader","FileReader","onload","evt","bstr","result","wb","read","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_csv","header","employeeDataJSON","convertToJson","parsedJSON","JSON","parse","emp","item","id","allEmployeeData","checkEmpExist","find","x","username","updateEmpRecord","createEmpRecord","readAsBinaryString","onFileUpload","resp","post","err","put","formData","FormData","append","name","console","log","sendPostRequest","status","fileData","lastModifiedDate","toDateString","get","then","res","employee","csv","lines","split","headers","i","length","obj","currentline","j","push","stringify"],"mappings":"ijCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,GAAKC,CAAAA,IAAZ,KAAsB,MAAtB,C,2FAEMC,CAAAA,U,2UAEJC,K,CAAQ,CACNC,YAAY,CAAE,IADR,CAENC,WAAW,CAAE,EAFP,C,OAgBRC,Y,CAAe,SAAAC,KAAK,CAAI,CACtB,GAAIC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsBC,IAArC,CACA,GAAIC,CAAAA,QAAQ,CAAGL,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsBG,IAArC,CACA,GAAMC,CAAAA,cAAc,CAAGC,IAAI,CAACC,KAAL,CAAYJ,QAAQ,CAAG,IAAvB,CAAvB,CACA,GAAIJ,QAAQ,GAAK,0BAAjB,CAA6C,CAC3C,GAAIM,cAAc,EAAI,IAAtB,CAA4B,CAC1B,MAAKG,QAAL,CAAc,CAAEb,YAAY,CAAEG,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAhB,CAAd,EACD,CAFD,IAGK,CACH,MAAKO,QAAL,CAAc,CAAEb,YAAY,CAAE,IAAhB,CAAd,EACAc,KAAK,CAAC,oDAAD,CAAL,CACD,CACF,CARD,IASK,CACH,MAAKD,QAAL,CAAc,CAAEb,YAAY,CAAE,IAAhB,CAAd,EACAc,KAAK,CAAC,wDAAD,CAAL,CACD,CACF,C,OAwBDC,uB,CAA0B,UAAM,CAE9B;AACA,GAAIC,CAAAA,iBAAiB,CAAG,CAAxB,CACA,GAAIC,CAAAA,CAAC,CAAG,MAAKlB,KAAL,CAAWC,YAAnB,CACA,GAAMkB,CAAAA,MAAM,CAAG,GAAIC,CAAAA,UAAJ,EAAf,CACAD,MAAM,CAACE,MAAP,CAAgB,SAACC,GAAD,CAAS,CAEvB,GAAMC,CAAAA,IAAI,CAAGD,GAAG,CAAChB,MAAJ,CAAWkB,MAAxB,CACA,GAAMC,CAAAA,EAAE,CAAG3B,IAAI,CAAC4B,IAAL,CAAUH,IAAV,CAAgB,CAAEf,IAAI,CAAE,QAAR,CAAhB,CAAX,CACA,GAAMmB,CAAAA,MAAM,CAAGF,EAAE,CAACG,UAAH,CAAc,CAAd,CAAf,CACA,GAAMC,CAAAA,EAAE,CAAGJ,EAAE,CAACK,MAAH,CAAUH,MAAV,CAAX,CACA,GAAMI,CAAAA,IAAI,CAAGjC,IAAI,CAACkC,KAAL,CAAWC,YAAX,CAAwBJ,EAAxB,CAA4B,CAAEK,MAAM,CAAE,CAAV,CAA5B,CAAb,CAGA,GAAIC,CAAAA,gBAAgB,CAAG,MAAKC,aAAL,CAAmBL,IAAnB,CAAvB,CACA,GAAIM,CAAAA,UAAU,CAAGC,IAAI,CAACC,KAAL,CAAWJ,gBAAX,CAAjB,CAVuB,yBAWdK,GAXc,EAarB,GAAIC,CAAAA,IAAI,CAAGJ,UAAU,CAACG,GAAD,CAArB,CACA,GAAIC,IAAI,EAAIA,IAAI,CAACC,EAAL,GAAY,EAAxB,CAA4B,CAE1B;AACA,GAAID,IAAI,CAACC,EAAL,GAAY,GAAhB,CAAqB,CACnB,GAAIC,CAAAA,eAAe,CAAG,MAAK3C,KAAL,CAAWE,WAAjC,CACA,GAAI0C,CAAAA,aAAa,CAAGD,eAAe,CAACE,IAAhB,CAAqB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACJ,EAAF,GAASD,IAAI,CAACC,EAAd,EAAoBI,CAAC,CAACC,QAAF,GAAeN,IAAI,CAACM,QAA5C,EAAtB,CAApB,CACA,GAAIH,aAAJ,CAAmB,CACjB;AACA,MAAKI,eAAL,CAAqBP,IAArB,EACD,CAHD,IAIK,CACH;AACA,MAAKQ,eAAL,CAAqBR,IAArB,EACD,CACF,CAEF,CAhBD,IAiBK,CACHxB,iBAAiB,GAClB,CAjCoB,EAWvB,IAAK,GAAIuB,CAAAA,GAAT,GAAgBH,CAAAA,UAAhB,CAA4B,OAAnBG,GAAmB,EAuB3B,CAEF,CApCD,CAqCArB,MAAM,CAAC+B,kBAAP,CAA0BhC,CAA1B,EAEA;AACA,GAAID,iBAAiB,EAAI,CAAzB,CAA4B,CAC1B,MAAKkC,YAAL,GACD,CAEF,C,OAGDF,e,CAAkB,SAACT,GAAD,CAAS,CACzB,GAAI,CACF,GAAMY,CAAAA,IAAI,CAAGvD,KAAK,CAACwD,IAAN,CAAW,8CAAX,CAA2Db,GAA3D,CAAb,CACAzB,KAAK,CAAC,sBAAD,CAAL,CACD,CAAC,MAAOuC,GAAP,CAAY,CACZ;AACAvC,KAAK,CAAC,+BAAiCuC,GAAlC,CAAL,CACD,CACF,C,OAEDN,e,CAAkB,SAACR,GAAD,CAAS,CACzB,GAAI,CACF,GAAMY,CAAAA,IAAI,CAAGvD,KAAK,CAAC0D,GAAN,CAAU,gDAAkDf,GAAG,CAACE,EAAhE,CAAoE,CAAEF,GAAG,CAAHA,GAAF,CAApE,CAAb,CACAzB,KAAK,CAAC,0BAAD,CAAL,CACD,CAAC,MAAOuC,GAAP,CAAY,CACZ;AACAvC,KAAK,CAAC,kCAAoCuC,GAArC,CAAL,CACD,CACF,C,OAGDH,Y,CAAe,UAAM,CAEnB;AACA,GAAMK,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,EAAjB,CAEAD,QAAQ,CAACE,MAAT,CACE,QADF,CAEE,MAAK1D,KAAL,CAAWC,YAFb,CAGE,MAAKD,KAAL,CAAWC,YAAX,CAAwB0D,IAH1B,EAMAC,OAAO,CAACC,GAAR,CAAY,MAAK7D,KAAL,CAAWC,YAAvB,EAEA,GAAM6D,CAAAA,eAAe,0FAAG,kLAEDjE,CAAAA,KAAK,CAACwD,IAAN,CAAW,qDAAX,CAAkEG,QAAlE,CAFC,QAEdJ,IAFc,eAGpBrC,KAAK,CAAC,2BAA6BqC,IAAI,CAACW,MAAnC,CAAL,CAHoB,+EAKpB;AACAhD,KAAK,CAAC,iCAAD,CAAL,CANoB,oEAAH,kBAAf+C,CAAAA,eAAe,0CAArB,CAUAA,eAAe,GAEhB,C,OAKDE,Q,CAAW,UAAM,CACf,GAAI,MAAKhE,KAAL,CAAWC,YAAf,CAA6B,CAE3B,mBACE,oCACE,qCADF,cAEE,mCAAe,MAAKD,KAAL,CAAWC,YAAX,CAAwB0D,IAAvC,GAFF,cAGE,mCAAe,MAAK3D,KAAL,CAAWC,YAAX,CAAwBO,IAAvC,GAHF,cAIE,sCACiB,GADjB,CAEG,MAAKR,KAAL,CAAWC,YAAX,CAAwBgE,gBAAxB,CAAyCC,YAAzC,EAFH,GAJF,GADF,CAWD,CAbD,IAaO,CACL,mBACE,oCACE,aADF,cAEE,4EAFF,GADF,CAMD,CACF,C,uEAjLD,4BAAoB,iBAClB;AACArE,KAAK,CAACsE,GAAN,CAAU,8CAAV,EACGC,IADH,CACQ,SAAAC,GAAG,CAAI,CACX,GAAMC,CAAAA,QAAQ,CAAGD,GAAG,CAACtC,IAArB,CACA,MAAI,CAACjB,QAAL,CAAc,CAAEZ,WAAW,CAAEoE,QAAf,CAAd,EACD,CAJH,EAKD,C,6BAsBD,uBAAcC,GAAd,CAAmB,CACjB,GAAIC,CAAAA,KAAK,CAAGD,GAAG,CAACE,KAAJ,CAAU,IAAV,CAAZ,CAEA,GAAIjD,CAAAA,MAAM,CAAG,EAAb,CAEA,GAAIkD,CAAAA,OAAO,CAAGF,KAAK,CAAC,CAAD,CAAL,CAASC,KAAT,CAAe,GAAf,CAAd,CAEA,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,KAAK,CAACI,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACrC,GAAIE,CAAAA,GAAG,CAAG,EAAV,CACA,GAAIC,CAAAA,WAAW,CAAGN,KAAK,CAACG,CAAD,CAAL,CAASF,KAAT,CAAe,GAAf,CAAlB,CAEA,IAAK,GAAIM,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,OAAO,CAACE,MAA5B,CAAoCG,CAAC,EAArC,CAAyC,CACvCF,GAAG,CAACH,OAAO,CAACK,CAAD,CAAR,CAAH,CAAkBD,WAAW,CAACC,CAAD,CAA7B,CACD,CAEDvD,MAAM,CAACwD,IAAP,CAAYH,GAAZ,EACD,CAED;AACA,MAAOvC,CAAAA,IAAI,CAAC2C,SAAL,CAAezD,MAAf,CAAP,CAA+B;AAChC,C,sBAkID,iBAAS,CACP,mBACE,aAAK,SAAS,CAAC,qBAAf,wBACE,oCACE,cAAO,IAAI,CAAC,MAAZ,CAAmB,QAAQ,CAAE,KAAKrB,YAAlC,EADF,cAEE,eAAQ,OAAO,CAAE,KAAKa,uBAAtB,oBAFF,GADF,CAOG,KAAKgD,QAAL,EAPH,GADF,CAWD,C,wBAvMsBpE,S,EA4MzB,cAAeG,CAAAA,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as XLSX from 'xlsx';\r\n\r\nclass UserUpload extends Component {\r\n\r\n  state = {\r\n    selectedFile: null,\r\n    allEmployee: []\r\n  };\r\n  \r\n\r\n  componentDidMount() {\r\n    //Load All Employees\r\n    axios.get('https://nphc-hr.free.beeceptor.com/employees')\r\n      .then(res => {\r\n        const employee = res.data;\r\n        this.setState({ allEmployee: employee });\r\n      })\r\n  }\r\n\r\n\r\n  onFileChange = event => {\r\n    let fileType = event.target.files[0].type;\r\n    let fileSize = event.target.files[0].size;\r\n    const actualFileSize = Math.round((fileSize / 1024));\r\n    if (fileType === \"application/vnd.ms-excel\") {\r\n      if (actualFileSize <= 2048) {\r\n        this.setState({ selectedFile: event.target.files[0] });\r\n      }\r\n      else {\r\n        this.setState({ selectedFile: null });\r\n        alert(\"File too big, please select a file lesser than 2mb\");\r\n      }\r\n    }\r\n    else {\r\n      this.setState({ selectedFile: null });\r\n      alert(\"File format not supported, please select only CSV file\");\r\n    }\r\n  };\r\n\r\n  convertToJson(csv) {\r\n    var lines = csv.split(\"\\n\");\r\n\r\n    var result = [];\r\n\r\n    var headers = lines[0].split(\",\");\r\n\r\n    for (var i = 1; i < lines.length; i++) {\r\n      var obj = {};\r\n      var currentline = lines[i].split(\",\");\r\n\r\n      for (var j = 0; j < headers.length; j++) {\r\n        obj[headers[j]] = currentline[j];\r\n      }\r\n\r\n      result.push(obj);\r\n    }\r\n\r\n    //return result; //JavaScript object\r\n    return JSON.stringify(result); //JSON\r\n  }\r\n\r\n  onFileValidationNUpdate = () => {\r\n\r\n    //Read data from CSV\r\n    let validationCounter = 0;\r\n    let f = this.state.selectedFile;\r\n    const reader = new FileReader();\r\n    reader.onload = (evt) => {\r\n\r\n      const bstr = evt.target.result;\r\n      const wb = XLSX.read(bstr, { type: \"binary\" });\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n\r\n\r\n      let employeeDataJSON = this.convertToJson(data);\r\n      let parsedJSON = JSON.parse(employeeDataJSON);\r\n      for (let emp in parsedJSON) {\r\n\r\n        let item = parsedJSON[emp];\r\n        if (item && item.id !== \"\") {\r\n\r\n          //Any row starting with “#” is considered a comment and ignored.\r\n          if (item.id !== \"#\") {\r\n            let allEmployeeData = this.state.allEmployee;\r\n            let checkEmpExist = allEmployeeData.find(x => x.id === item.id && x.username === item.username);\r\n            if (checkEmpExist) {\r\n              //Update Emp Record\r\n              this.updateEmpRecord(item);\r\n            }\r\n            else {\r\n              //Create New Emp Record\r\n              this.createEmpRecord(item);\r\n            }\r\n          }\r\n\r\n        }\r\n        else {\r\n          validationCounter++;\r\n        }\r\n      }\r\n\r\n    };\r\n    reader.readAsBinaryString(f);\r\n\r\n    //one or more of the rows fails validation, the entire file is rejected\r\n    if (validationCounter <= 1) {\r\n      this.onFileUpload();\r\n    }\r\n\r\n  };\r\n\r\n\r\n  createEmpRecord = (emp) => {\r\n    try {\r\n      const resp = axios.post('https://nphc-hr.free.beeceptor.com/employees', emp);\r\n      alert('New Employee created');\r\n    } catch (err) {\r\n      // Handle Error Here\r\n      alert('New Employee Service failed ' + err);\r\n    }\r\n  };\r\n\r\n  updateEmpRecord = (emp) => {\r\n    try {\r\n      const resp = axios.put('https://nphc-hr.free.beeceptor.com/employees/' + emp.id, { emp });\r\n      alert('Employee details updated');\r\n    } catch (err) {\r\n      // Handle Error Here\r\n      alert('Employee Update Service failed ' + err);\r\n    }\r\n  };\r\n\r\n\r\n  onFileUpload = () => {\r\n\r\n    // File Upload to Backend\r\n    const formData = new FormData();\r\n\r\n    formData.append(\r\n      \"myFile\",\r\n      this.state.selectedFile,\r\n      this.state.selectedFile.name\r\n    );\r\n\r\n    console.log(this.state.selectedFile);\r\n\r\n    const sendPostRequest = async () => {\r\n      try {\r\n        const resp = await axios.post('https://nphc-hr.free.beeceptor.com/employees/upload', formData);\r\n        alert('File upload sucessfully ' + resp.status);\r\n      } catch (err) {\r\n        // Handle Error Here\r\n        alert('File upload failed ' + err);\r\n      }\r\n    };\r\n\r\n    sendPostRequest();\r\n\r\n  };\r\n\r\n\r\n\r\n  // File content to be displayed after \r\n  fileData = () => {\r\n    if (this.state.selectedFile) {\r\n\r\n      return (\r\n        <div>\r\n          <h2>File Details:</h2>\r\n          <p>File Name: {this.state.selectedFile.name}</p>\r\n          <p>File Type: {this.state.selectedFile.type}</p>\r\n          <p>\r\n            Last Modified:{\" \"}\r\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <br />\r\n          <h4>Please select file before pressing the upload button</h4>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"fileUploadContainer\">\r\n        <div>\r\n          <input type=\"file\" onChange={this.onFileChange} />\r\n          <button onClick={this.onFileValidationNUpdate}>\r\n            Upload\r\n          </button>\r\n        </div>\r\n        {this.fileData()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default UserUpload;\r\n"]},"metadata":{},"sourceType":"module"}