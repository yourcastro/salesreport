{"ast":null,"code":"var _jsxFileName = \"D:\\\\Castro\\\\Development\\\\hr-management-portal\\\\hr-management-portal\\\\src\\\\uploadUser.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserUpload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Initially, no file is selected \n      selectedFile: null\n    };\n\n    this.onFileChange = event => {\n      // Update the state \n      let fileType = event.target.files[0].type;\n      let fileSize = event.target.files[0].size;\n      const actualFileSize = Math.round(fileSize / 1024);\n\n      if (fileType == \"application/vnd.ms-excel\") {\n        if (actualFileSize <= 2048) {\n          this.setState({\n            selectedFile: event.target.files[0]\n          });\n        } else {\n          this.setState({\n            selectedFile: null\n          });\n          alert(\"File too big, please select a file lesser than 2mb\");\n        }\n      } else {\n        this.setState({\n          selectedFile: null\n        });\n        alert(\"File format not supported, please select only CSV file\");\n      }\n    };\n\n    this.onFileUpload = () => {\n      const formData = new FormData();\n      formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name); // Details of the uploaded file \n\n      console.log(this.state.selectedFile);\n      axios({\n        method: \"post\",\n        url: \"https://nphc-hr.free.beeceptor.com//employees/upload\",\n        data: formData,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (response) {\n        //handle success\n        console.log(response);\n      }).catch(function (response) {\n        //handle error\n        console.log(response);\n      });\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified:\", \" \", this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Please select file before pressing the upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fileUploadContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          children: \"Upload!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), this.fileData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserUpload;","map":{"version":3,"sources":["D:/Castro/Development/hr-management-portal/hr-management-portal/src/uploadUser.js"],"names":["axios","React","Component","UserUpload","state","selectedFile","onFileChange","event","fileType","target","files","type","fileSize","size","actualFileSize","Math","round","setState","alert","onFileUpload","formData","FormData","append","name","console","log","method","url","data","headers","then","response","catch","fileData","lastModifiedDate","toDateString","render"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React,{Component} from 'react'; \r\n\r\nclass UserUpload extends Component { \r\n\r\n    state = { \r\n      // Initially, no file is selected \r\n      selectedFile: null\r\n    }; \r\n     \r\n    // On file select (from the pop up) \r\n    onFileChange = event => {\r\n        // Update the state \r\n        let fileType = event.target.files[0].type;\r\n        let fileSize = event.target.files[0].size;\r\n        const actualFileSize = Math.round((fileSize / 1024));\r\n        if (fileType == \"application/vnd.ms-excel\") {\r\n            if (actualFileSize <= 2048) {\r\n                this.setState({ selectedFile: event.target.files[0] });\r\n            }\r\n            else {\r\n                this.setState({ selectedFile: null });\r\n                alert(\"File too big, please select a file lesser than 2mb\");\r\n            }\r\n        }\r\n        else {\r\n            this.setState({ selectedFile: null });\r\n            alert(\"File format not supported, please select only CSV file\");\r\n        }\r\n\r\n    };\r\n     \r\n    onFileUpload = () => {\r\n        \r\n        const formData = new FormData();\r\n\r\n        formData.append(\r\n            \"myFile\",\r\n            this.state.selectedFile,\r\n            this.state.selectedFile.name\r\n        );\r\n\r\n        // Details of the uploaded file \r\n        console.log(this.state.selectedFile);\r\n\r\n        axios({\r\n            method: \"post\",\r\n            url: \"https://nphc-hr.free.beeceptor.com//employees/upload\",\r\n            data: formData,\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        })\r\n            .then(function (response) {\r\n                //handle success\r\n                console.log(response);\r\n            })\r\n            .catch(function (response) {\r\n                //handle error\r\n                console.log(response);\r\n            });\r\n\r\n    };\r\n     \r\n    // File content to be displayed after \r\n    // file upload is complete \r\n    fileData = () => { \r\n      if (this.state.selectedFile) { \r\n          \r\n        return ( \r\n          <div> \r\n            <h2>File Details:</h2> \r\n            <p>File Name: {this.state.selectedFile.name}</p> \r\n            <p>File Type: {this.state.selectedFile.type}</p> \r\n            <p> \r\n              Last Modified:{\" \"} \r\n              {this.state.selectedFile.lastModifiedDate.toDateString()} \r\n            </p> \r\n          </div> \r\n        ); \r\n      } else { \r\n        return ( \r\n          <div> \r\n            <br /> \r\n            <h4>Please select file before pressing the upload button</h4> \r\n          </div> \r\n        ); \r\n      } \r\n    }; \r\n     \r\n    render() {\r\n        return (\r\n            <div className=\"fileUploadContainer\">\r\n                <div>\r\n                    <input type=\"file\" onChange={this.onFileChange} />\r\n                    <button onClick={this.onFileUpload}>\r\n                        Upload!\r\n                    </button>\r\n                </div>\r\n                {this.fileData()}\r\n            </div>\r\n        );\r\n    }\r\n  } \r\n  \r\n \r\n\r\nexport default UserUpload; \r\n"]},"metadata":{},"sourceType":"module"}