{"ast":null,"code":"define([\"../core\", \"../core/toType\", \"../var/isFunction\"], function (jQuery, toType, isFunction) {\n  \"use strict\"; // Multifunctional method to get and set values of a collection\n  // The value/s can optionally be executed if it's a function\n\n  var access = function (elems, fn, key, value, chainable, emptyGet, raw) {\n    var i = 0,\n        len = elems.length,\n        bulk = key == null; // Sets many values\n\n    if (toType(key) === \"object\") {\n      chainable = true;\n\n      for (i in key) {\n        access(elems, fn, i, key[i], true, emptyGet, raw);\n      } // Sets one value\n\n    } else if (value !== undefined) {\n      chainable = true;\n\n      if (!isFunction(value)) {\n        raw = true;\n      }\n\n      if (bulk) {\n        // Bulk operations run against the entire set\n        if (raw) {\n          fn.call(elems, value);\n          fn = null; // ...except when executing function values\n        } else {\n          bulk = fn;\n\n          fn = function (elem, _key, value) {\n            return bulk.call(jQuery(elem), value);\n          };\n        }\n      }\n\n      if (fn) {\n        for (; i < len; i++) {\n          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n        }\n      }\n    }\n\n    if (chainable) {\n      return elems;\n    } // Gets\n\n\n    if (bulk) {\n      return fn.call(elems);\n    }\n\n    return len ? fn(elems[0], key) : emptyGet;\n  };\n\n  return access;\n});","map":{"version":3,"sources":["D:/Castro/Development/hr-management-portal/hr-management-portal/node_modules/jquery/src/core/access.js"],"names":["define","jQuery","toType","isFunction","access","elems","fn","key","value","chainable","emptyGet","raw","i","len","length","bulk","undefined","call","elem","_key"],"mappings":"AAAAA,MAAM,CAAE,CACP,SADO,EAEP,gBAFO,EAGP,mBAHO,CAAF,EAIH,UAAUC,MAAV,EAAkBC,MAAlB,EAA0BC,UAA1B,EAAuC;AAE1C,eAF0C,CAI1C;AACA;;AACA,MAAIC,MAAM,GAAG,UAAUC,KAAV,EAAiBC,EAAjB,EAAqBC,GAArB,EAA0BC,KAA1B,EAAiCC,SAAjC,EAA4CC,QAA5C,EAAsDC,GAAtD,EAA4D;AACxE,QAAIC,CAAC,GAAG,CAAR;AAAA,QACCC,GAAG,GAAGR,KAAK,CAACS,MADb;AAAA,QAECC,IAAI,GAAGR,GAAG,IAAI,IAFf,CADwE,CAKxE;;AACA,QAAKL,MAAM,CAAEK,GAAF,CAAN,KAAkB,QAAvB,EAAkC;AACjCE,MAAAA,SAAS,GAAG,IAAZ;;AACA,WAAMG,CAAN,IAAWL,GAAX,EAAiB;AAChBH,QAAAA,MAAM,CAAEC,KAAF,EAASC,EAAT,EAAaM,CAAb,EAAgBL,GAAG,CAAEK,CAAF,CAAnB,EAA0B,IAA1B,EAAgCF,QAAhC,EAA0CC,GAA1C,CAAN;AACA,OAJgC,CAMlC;;AACC,KAPD,MAOO,IAAKH,KAAK,KAAKQ,SAAf,EAA2B;AACjCP,MAAAA,SAAS,GAAG,IAAZ;;AAEA,UAAK,CAACN,UAAU,CAAEK,KAAF,CAAhB,EAA4B;AAC3BG,QAAAA,GAAG,GAAG,IAAN;AACA;;AAED,UAAKI,IAAL,EAAY;AAEX;AACA,YAAKJ,GAAL,EAAW;AACVL,UAAAA,EAAE,CAACW,IAAH,CAASZ,KAAT,EAAgBG,KAAhB;AACAF,UAAAA,EAAE,GAAG,IAAL,CAFU,CAIX;AACC,SALD,MAKO;AACNS,UAAAA,IAAI,GAAGT,EAAP;;AACAA,UAAAA,EAAE,GAAG,UAAUY,IAAV,EAAgBC,IAAhB,EAAsBX,KAAtB,EAA8B;AAClC,mBAAOO,IAAI,CAACE,IAAL,CAAWhB,MAAM,CAAEiB,IAAF,CAAjB,EAA2BV,KAA3B,CAAP;AACA,WAFD;AAGA;AACD;;AAED,UAAKF,EAAL,EAAU;AACT,eAAQM,CAAC,GAAGC,GAAZ,EAAiBD,CAAC,EAAlB,EAAuB;AACtBN,UAAAA,EAAE,CACDD,KAAK,CAAEO,CAAF,CADJ,EACWL,GADX,EACgBI,GAAG,GACnBH,KADmB,GAEnBA,KAAK,CAACS,IAAN,CAAYZ,KAAK,CAAEO,CAAF,CAAjB,EAAwBA,CAAxB,EAA2BN,EAAE,CAAED,KAAK,CAAEO,CAAF,CAAP,EAAcL,GAAd,CAA7B,CAHA,CAAF;AAKA;AACD;AACD;;AAED,QAAKE,SAAL,EAAiB;AAChB,aAAOJ,KAAP;AACA,KAjDuE,CAmDxE;;;AACA,QAAKU,IAAL,EAAY;AACX,aAAOT,EAAE,CAACW,IAAH,CAASZ,KAAT,CAAP;AACA;;AAED,WAAOQ,GAAG,GAAGP,EAAE,CAAED,KAAK,CAAE,CAAF,CAAP,EAAcE,GAAd,CAAL,GAA2BG,QAArC;AACA,GAzDD;;AA2DA,SAAON,MAAP;AAEC,CAvEK,CAAN","sourcesContent":["define( [\n\t\"../core\",\n\t\"../core/toType\",\n\t\"../var/isFunction\"\n], function( jQuery, toType, isFunction ) {\n\n\"use strict\";\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, _key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\t\tvalue :\n\t\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\nreturn access;\n\n} );\n"]},"metadata":{},"sourceType":"script"}