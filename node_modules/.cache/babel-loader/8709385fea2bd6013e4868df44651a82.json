{"ast":null,"code":"var _jsxFileName = \"D:\\\\Castro\\\\Development\\\\SalesReport\\\\SalesReport\\\\src\\\\uploadUser.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport randExp from 'randexp';\nimport * as XLSX from 'xlsx';\nimport { ToastContainer, toast } from 'react-toastify';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserUpload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedFile: null,\n      allRecords: []\n    };\n\n    this.onFileChange = event => {\n      let fileType = event.target.files[0].type;\n      let fileSize = event.target.files[0].size;\n\n      if (fileType === \"application/vnd.ms-excel\") {\n        this.setState({\n          selectedFile: event.target.files[0]\n        });\n        console.log(\"Upload Sucessfully\");\n      } else {\n        this.setState({\n          selectedFile: null\n        });\n        alert(\"File format not supported, please select only CSV file\");\n      }\n    };\n\n    this.onFileValidationNUpdate = () => {\n      toast(\"Loading....\"); //Read data from CSV\n\n      var filteredArray = [];\n      let f = this.state.selectedFile;\n      const reader = new FileReader();\n\n      reader.onload = evt => {\n        const bstr = evt.target.result;\n        const wb = XLSX.read(bstr, {\n          type: \"binary\"\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const data = XLSX.utils.sheet_to_csv(ws, {\n          header: 1\n        });\n        let employeeDataJSON = this.convertToJson(data);\n        let parsedJSON = JSON.parse(employeeDataJSON);\n\n        for (let emp in parsedJSON) {\n          let item = parsedJSON[emp];\n\n          if (Object.keys(item).length > 0) {\n            //console.log(item);\n            let nricGen = new randExp(/^(S|T|F|G){1}([0-9]){7}([a-zA-Z]){1}$/).gen();\n            item.NRIC = nricGen;\n            filteredArray.push(item);\n            console.log(item);\n          } else {\n            console.log(\"Empty row found\");\n          }\n        }\n\n        this.setState({\n          allRecords: filteredArray\n        });\n      };\n\n      reader.readAsBinaryString(f); //this.onFileUpload();\n    };\n\n    this.createEmpRecord = emp => {\n      try {\n        const resp = axios.post('https://nphc-hr.free.beeceptor.com/employees', emp);\n        alert('New Employee created');\n      } catch (err) {\n        // Handle Error Here\n        alert('New Employee Service failed ' + err);\n      }\n    };\n\n    this.updateEmpRecord = emp => {\n      try {\n        const resp = axios.put('https://nphc-hr.free.beeceptor.com/employees/' + emp.id, {\n          emp\n        });\n        alert('Employee details updated');\n      } catch (err) {\n        // Handle Error Here\n        alert('Employee Update Service failed ' + err);\n      }\n    };\n\n    this.onFileUpload = () => {\n      // File Upload to Backend\n      const formData = new FormData();\n      formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name);\n      console.log(this.state.selectedFile);\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadMobileContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified:\", \" \", this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadMobile\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Please select file before pressing the upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this);\n      }\n    };\n  }\n\n  UNSAFE_componentDidMount() {}\n\n  convertToJson(csv) {\n    var lines = csv.split(\"\\n\");\n    var result = [];\n    var headers = lines[0].split(\",\");\n\n    for (var i = 1; i < lines.length; i++) {\n      var obj = {};\n      var currentline = lines[i].split(\",\");\n\n      for (var j = 0; j < headers.length; j++) {\n        obj[headers[j]] = currentline[j];\n      }\n\n      result.push(obj);\n    } //return result; //JavaScript object\n\n\n    return JSON.stringify(result); //JSON\n  }\n\n  render() {\n    var dataRowVal = this.state.allRecords;\n    const columns = [{\n      dataField: \"Region\"\n    }, {\n      dataField: \"Country\"\n    }, {\n      dataField: \"Item Type\"\n    }, {\n      dataField: \"Sales Channel\"\n    }, {\n      dataField: \"Order Priority\"\n    }, {\n      dataField: \"Order Date\"\n    }, {\n      dataField: \"Order ID\"\n    }, {\n      dataField: \"Ship Date\"\n    }, {\n      dataField: \"Units Sold\"\n    }, {\n      dataField: \"Unit Price\"\n    }, {\n      dataField: \"Unit Cost\"\n    }, {\n      dataField: \"Total Revenue\"\n    }, {\n      dataField: \"Total Cost\"\n    }, {\n      dataField: \"Total Profit\"\n    }, {\n      dataField: 'NRIC'\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fileUploadContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.onFileValidationNUpdate,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), this.fileData()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), dataRowVal.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employeeDashboardConatiner\",\n        children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n          keyField: \"BSDataTable\",\n          data: dataRowVal,\n          columns: columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default UserUpload;","map":{"version":3,"sources":["D:/Castro/Development/SalesReport/SalesReport/src/uploadUser.js"],"names":["React","Component","axios","randExp","XLSX","ToastContainer","toast","BootstrapTable","UserUpload","state","selectedFile","allRecords","onFileChange","event","fileType","target","files","type","fileSize","size","setState","console","log","alert","onFileValidationNUpdate","filteredArray","f","reader","FileReader","onload","evt","bstr","result","wb","read","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_csv","header","employeeDataJSON","convertToJson","parsedJSON","JSON","parse","emp","item","Object","keys","length","nricGen","gen","NRIC","push","readAsBinaryString","createEmpRecord","resp","post","err","updateEmpRecord","put","id","onFileUpload","formData","FormData","append","name","fileData","lastModifiedDate","toDateString","UNSAFE_componentDidMount","csv","lines","split","headers","i","obj","currentline","j","stringify","render","dataRowVal","columns","dataField"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,OAAO,uCAAP;AACA,OAAO,gEAAP;;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAEjCQ,KAFiC,GAEzB;AACNC,MAAAA,YAAY,EAAE,IADR;AAENC,MAAAA,UAAU,EAAE;AAFN,KAFyB;;AAAA,SAYjCC,YAZiC,GAYlBC,KAAK,IAAI;AACtB,UAAIC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsBC,IAArC;AACA,UAAIC,QAAQ,GAAGL,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsBG,IAArC;;AACA,UAAIL,QAAQ,KAAK,0BAAjB,EAA6C;AAC3C,aAAKM,QAAL,CAAc;AAAEV,UAAAA,YAAY,EAAEG,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,SAAd;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,OAHD,MAIK;AACH,aAAKF,QAAL,CAAc;AAAEV,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACAa,QAAAA,KAAK,CAAC,wDAAD,CAAL;AACD;AACF,KAvBgC;;AAAA,SA+CjCC,uBA/CiC,GA+CP,MAAM;AAE9BlB,MAAAA,KAAK,CAAC,aAAD,CAAL,CAF8B,CAI9B;;AACA,UAAImB,aAAa,GAAG,EAApB;AACA,UAAIC,CAAC,GAAG,KAAKjB,KAAL,CAAWC,YAAnB;AACA,YAAMiB,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAiBC,GAAD,IAAS;AAEvB,cAAMC,IAAI,GAAGD,GAAG,CAACf,MAAJ,CAAWiB,MAAxB;AACA,cAAMC,EAAE,GAAG7B,IAAI,CAAC8B,IAAL,CAAUH,IAAV,EAAgB;AAAEd,UAAAA,IAAI,EAAE;AAAR,SAAhB,CAAX;AACA,cAAMkB,MAAM,GAAGF,EAAE,CAACG,UAAH,CAAc,CAAd,CAAf;AACA,cAAMC,EAAE,GAAGJ,EAAE,CAACK,MAAH,CAAUH,MAAV,CAAX;AACA,cAAMI,IAAI,GAAGnC,IAAI,CAACoC,KAAL,CAAWC,YAAX,CAAwBJ,EAAxB,EAA4B;AAAEK,UAAAA,MAAM,EAAE;AAAV,SAA5B,CAAb;AAGA,YAAIC,gBAAgB,GAAG,KAAKC,aAAL,CAAmBL,IAAnB,CAAvB;AACA,YAAIM,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWJ,gBAAX,CAAjB;;AACA,aAAK,IAAIK,GAAT,IAAgBH,UAAhB,EAA4B;AAC1B,cAAII,IAAI,GAAGJ,UAAU,CAACG,GAAD,CAArB;;AACA,cAAGE,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,MAAlB,GAA2B,CAA9B,EAAgC;AAC5B;AACA,gBAAIC,OAAO,GAAG,IAAIlD,OAAJ,CAAY,uCAAZ,EAAqDmD,GAArD,EAAd;AACAL,YAAAA,IAAI,CAACM,IAAL,GAAYF,OAAZ;AACA5B,YAAAA,aAAa,CAAC+B,IAAd,CAAmBP,IAAnB;AACA5B,YAAAA,OAAO,CAACC,GAAR,CAAY2B,IAAZ;AACH,WAND,MAOI;AACF5B,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;AACF;;AACD,aAAKF,QAAL,CAAc;AAAET,UAAAA,UAAU,EAAEc;AAAd,SAAd;AACD,OAzBD;;AA0BAE,MAAAA,MAAM,CAAC8B,kBAAP,CAA0B/B,CAA1B,EAlC8B,CAoC9B;AACD,KApFgC;;AAAA,SAuFjCgC,eAvFiC,GAuFdV,GAAD,IAAS;AACzB,UAAI;AACF,cAAMW,IAAI,GAAGzD,KAAK,CAAC0D,IAAN,CAAW,8CAAX,EAA2DZ,GAA3D,CAAb;AACAzB,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACD,OAHD,CAGE,OAAOsC,GAAP,EAAY;AACZ;AACAtC,QAAAA,KAAK,CAAC,iCAAiCsC,GAAlC,CAAL;AACD;AACF,KA/FgC;;AAAA,SAiGjCC,eAjGiC,GAiGdd,GAAD,IAAS;AACzB,UAAI;AACF,cAAMW,IAAI,GAAGzD,KAAK,CAAC6D,GAAN,CAAU,kDAAkDf,GAAG,CAACgB,EAAhE,EAAoE;AAAEhB,UAAAA;AAAF,SAApE,CAAb;AACAzB,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACD,OAHD,CAGE,OAAOsC,GAAP,EAAY;AACZ;AACAtC,QAAAA,KAAK,CAAC,oCAAoCsC,GAArC,CAAL;AACD;AACF,KAzGgC;;AAAA,SA4GjCI,YA5GiC,GA4GlB,MAAM;AAEnB;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAD,MAAAA,QAAQ,CAACE,MAAT,CACE,QADF,EAEE,KAAK3D,KAAL,CAAWC,YAFb,EAGE,KAAKD,KAAL,CAAWC,YAAX,CAAwB2D,IAH1B;AAMAhD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,YAAvB;AACD,KAxHgC;;AAAA,SA6HjC4D,QA7HiC,GA6HtB,MAAM;AACf,UAAI,KAAK7D,KAAL,CAAWC,YAAf,EAA6B;AAE3B,4BACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sCAAe,KAAKD,KAAL,CAAWC,YAAX,CAAwB2D,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sCAAe,KAAK5D,KAAL,CAAWC,YAAX,CAAwBO,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,yCACiB,GADjB,EAEG,KAAKR,KAAL,CAAWC,YAAX,CAAwB6D,gBAAxB,CAAyCC,YAAzC,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAbD,MAaO;AACL,4BACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;AACF,KAnJgC;AAAA;;AAQjCC,EAAAA,wBAAwB,GAAG,CAC1B;;AAgBD7B,EAAAA,aAAa,CAAC8B,GAAD,EAAM;AACjB,QAAIC,KAAK,GAAGD,GAAG,CAACE,KAAJ,CAAU,IAAV,CAAZ;AAEA,QAAI5C,MAAM,GAAG,EAAb;AAEA,QAAI6C,OAAO,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASC,KAAT,CAAe,GAAf,CAAd;;AAEA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACvB,MAA1B,EAAkC0B,CAAC,EAAnC,EAAuC;AACrC,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,WAAW,GAAGL,KAAK,CAACG,CAAD,CAAL,CAASF,KAAT,CAAe,GAAf,CAAlB;;AAEA,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACzB,MAA5B,EAAoC6B,CAAC,EAArC,EAAyC;AACvCF,QAAAA,GAAG,CAACF,OAAO,CAACI,CAAD,CAAR,CAAH,GAAkBD,WAAW,CAACC,CAAD,CAA7B;AACD;;AAEDjD,MAAAA,MAAM,CAACwB,IAAP,CAAYuB,GAAZ;AACD,KAhBgB,CAkBjB;;;AACA,WAAOjC,IAAI,CAACoC,SAAL,CAAelD,MAAf,CAAP,CAnBiB,CAmBc;AAChC;;AAwGDmD,EAAAA,MAAM,GAAG;AAEP,QAAIC,UAAU,GAAG,KAAK3E,KAAL,CAAWE,UAA5B;AACA,UAAM0E,OAAO,GAAG,CAChB;AACEC,MAAAA,SAAS,EAAE;AADb,KADgB,EAIhB;AACEA,MAAAA,SAAS,EAAE;AADb,KAJgB,EAOhB;AACEA,MAAAA,SAAS,EAAE;AADb,KAPgB,EAUhB;AACEA,MAAAA,SAAS,EAAE;AADb,KAVgB,EAahB;AACEA,MAAAA,SAAS,EAAE;AADb,KAbgB,EAgBhB;AACEA,MAAAA,SAAS,EAAE;AADb,KAhBgB,EAmBhB;AACEA,MAAAA,SAAS,EAAE;AADb,KAnBgB,EAsBhB;AACEA,MAAAA,SAAS,EAAE;AADb,KAtBgB,EAyBhB;AACEA,MAAAA,SAAS,EAAE;AADb,KAzBgB,EA4BhB;AACEA,MAAAA,SAAS,EAAE;AADb,KA5BgB,EA+BhB;AACEA,MAAAA,SAAS,EAAE;AADb,KA/BgB,EAkChB;AACEA,MAAAA,SAAS,EAAE;AADb,KAlCgB,EAqChB;AACEA,MAAAA,SAAS,EAAE;AADb,KArCgB,EAwChB;AACEA,MAAAA,SAAS,EAAE;AADb,KAxCgB,EA2ChB;AACEA,MAAAA,SAAS,EAAE;AADb,KA3CgB,CAAhB;AAiDA,wBACE;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAE,KAAK1E;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,OAAO,EAAE,KAAKY,uBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAOG,KAAK8C,QAAL,EAPH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAaKc,UAAU,CAAChC,MAAX,GAAoB,CAArB,gBACE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE,QAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC,aAAzB;AAAuC,UAAA,IAAI,EAAEgC,UAA7C;AAAyD,UAAA,OAAO,EAAEC;AAAlE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,gBAII;AAAA;AAAA;AAAA;AAAA,cAjBR,eAqBE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AArOgC;;AA0OnC,eAAe7E,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport randExp from 'randexp';\r\nimport * as XLSX from 'xlsx';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\nclass UserUpload extends Component {\r\n\r\n  state = {\r\n    selectedFile: null,\r\n    allRecords: []\r\n  };\r\n\r\n\r\n  UNSAFE_componentDidMount() {\r\n  }\r\n\r\n\r\n  onFileChange = event => {\r\n    let fileType = event.target.files[0].type;\r\n    let fileSize = event.target.files[0].size;\r\n    if (fileType === \"application/vnd.ms-excel\") {\r\n      this.setState({ selectedFile: event.target.files[0] });\r\n      console.log(\"Upload Sucessfully\");\r\n    }\r\n    else {\r\n      this.setState({ selectedFile: null });\r\n      alert(\"File format not supported, please select only CSV file\");\r\n    }\r\n  };\r\n\r\n  convertToJson(csv) {\r\n    var lines = csv.split(\"\\n\");\r\n\r\n    var result = [];\r\n\r\n    var headers = lines[0].split(\",\");\r\n\r\n    for (var i = 1; i < lines.length; i++) {\r\n      var obj = {};\r\n      var currentline = lines[i].split(\",\");\r\n\r\n      for (var j = 0; j < headers.length; j++) {\r\n        obj[headers[j]] = currentline[j];\r\n      }\r\n\r\n      result.push(obj);\r\n    }\r\n\r\n    //return result; //JavaScript object\r\n    return JSON.stringify(result); //JSON\r\n  }\r\n\r\n  onFileValidationNUpdate = () => {\r\n\r\n    toast(\"Loading....\");\r\n\r\n    //Read data from CSV\r\n    var filteredArray = [];\r\n    let f = this.state.selectedFile;\r\n    const reader = new FileReader();\r\n    reader.onload = (evt) => {\r\n\r\n      const bstr = evt.target.result;\r\n      const wb = XLSX.read(bstr, { type: \"binary\" });\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n\r\n\r\n      let employeeDataJSON = this.convertToJson(data);\r\n      let parsedJSON = JSON.parse(employeeDataJSON);\r\n      for (let emp in parsedJSON) {\r\n        let item = parsedJSON[emp];\r\n        if(Object.keys(item).length > 0){\r\n            //console.log(item);\r\n            let nricGen = new randExp(/^(S|T|F|G){1}([0-9]){7}([a-zA-Z]){1}$/).gen();\r\n            item.NRIC = nricGen;\r\n            filteredArray.push(item);\r\n            console.log(item);\r\n        }\r\n        else{\r\n          console.log(\"Empty row found\");\r\n        }\r\n      }\r\n      this.setState({ allRecords: filteredArray });\r\n    };\r\n    reader.readAsBinaryString(f);\r\n    \r\n    //this.onFileUpload();\r\n  };\r\n\r\n\r\n  createEmpRecord = (emp) => {\r\n    try {\r\n      const resp = axios.post('https://nphc-hr.free.beeceptor.com/employees', emp);\r\n      alert('New Employee created');\r\n    } catch (err) {\r\n      // Handle Error Here\r\n      alert('New Employee Service failed ' + err);\r\n    }\r\n  };\r\n\r\n  updateEmpRecord = (emp) => {\r\n    try {\r\n      const resp = axios.put('https://nphc-hr.free.beeceptor.com/employees/' + emp.id, { emp });\r\n      alert('Employee details updated');\r\n    } catch (err) {\r\n      // Handle Error Here\r\n      alert('Employee Update Service failed ' + err);\r\n    }\r\n  };\r\n\r\n\r\n  onFileUpload = () => {\r\n\r\n    // File Upload to Backend\r\n    const formData = new FormData();\r\n\r\n    formData.append(\r\n      \"myFile\",\r\n      this.state.selectedFile,\r\n      this.state.selectedFile.name\r\n    );\r\n\r\n    console.log(this.state.selectedFile);\r\n  };\r\n\r\n\r\n\r\n  // File content to be displayed after \r\n  fileData = () => {\r\n    if (this.state.selectedFile) {\r\n\r\n      return (\r\n        <div className=\"uploadMobileContent\">\r\n          <h2>File Details:</h2>\r\n          <p>File Name: {this.state.selectedFile.name}</p>\r\n          <p>File Type: {this.state.selectedFile.type}</p>\r\n          <p>\r\n            Last Modified:{\" \"}\r\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"uploadMobile\">\r\n          <br />\r\n          <h4>Please select file before pressing the upload button</h4>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    var dataRowVal = this.state.allRecords;\r\n    const columns = [\r\n    {\r\n      dataField: \"Region\"\r\n    },\r\n    {\r\n      dataField: \"Country\"\r\n    },\r\n    {\r\n      dataField: \"Item Type\",\r\n    },\r\n    {\r\n      dataField: \"Sales Channel\",\r\n    },\r\n    {\r\n      dataField: \"Order Priority\",\r\n    },\r\n    {\r\n      dataField: \"Order Date\",\r\n    },\r\n    {\r\n      dataField: \"Order ID\",\r\n    },\r\n    {\r\n      dataField: \"Ship Date\",\r\n    },\r\n    {\r\n      dataField: \"Units Sold\",\r\n    },\r\n    {\r\n      dataField: \"Unit Price\",\r\n    },\r\n    {\r\n      dataField: \"Unit Cost\",\r\n    }, \r\n    {\r\n      dataField: \"Total Revenue\",\r\n    },\r\n    {\r\n      dataField: \"Total Cost\",\r\n    },\r\n    {\r\n      dataField: \"Total Profit\",\r\n    },\r\n    {\r\n      dataField: 'NRIC'\r\n    }\r\n    ];\r\n  \r\n\r\n    return (\r\n      <div>\r\n        \r\n        <div className=\"fileUploadContainer\">\r\n          <div>\r\n            <input type=\"file\" onChange={this.onFileChange} />\r\n            <button onClick={this.onFileValidationNUpdate}>\r\n              Upload\r\n            </button>\r\n          </div>\r\n          {this.fileData()}\r\n        </div>\r\n\r\n        {\r\n          (dataRowVal.length > 0) ?\r\n            <div className=\"employeeDashboardConatiner\">\r\n              <BootstrapTable keyField=\"BSDataTable\" data={dataRowVal} columns={columns} />\r\n            </div>\r\n            : <div></div>\r\n\r\n        }\r\n\r\n        <ToastContainer />\r\n\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default UserUpload;\r\n"]},"metadata":{},"sourceType":"module"}