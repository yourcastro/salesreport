{"ast":null,"code":"var _jsxFileName = \"D:\\\\Castro\\\\Development\\\\hr-management-portal\\\\hr-management-portal\\\\src\\\\uploadUser.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserUpload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Initially, no file is selected \n      selectedFile: null\n    };\n\n    this.onFileChange = event => {\n      // Update the state \n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onFileUpload = () => {\n      // Create an object of formData \n      const formData = new FormData(); // Update the formData object \n\n      formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name); // Details of the uploaded file \n\n      console.log(this.state.selectedFile); // Request made to the backend api \n      // Send formData object \n\n      axios.post(\"api/uploadfile\", formData);\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified:\", \" \", this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose before Pressing the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          children: \"Upload!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), this.fileData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserUpload;","map":{"version":3,"sources":["D:/Castro/Development/hr-management-portal/hr-management-portal/src/uploadUser.js"],"names":["axios","React","Component","UserUpload","state","selectedFile","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","post","fileData","type","lastModifiedDate","toDateString","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/BE,KAF+B,GAEvB;AAEN;AACAC,MAAAA,YAAY,EAAE;AAHR,KAFuB;;AAAA,SAS/BC,YAT+B,GAShBC,KAAK,IAAI;AACtB;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAEE,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,OAAd;AACD,KAZ8B;;AAAA,SAe/BC,YAf+B,GAehB,MAAM;AACnB;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAFmB,CAInB;;AACAD,MAAAA,QAAQ,CAACE,MAAT,CACE,QADF,EAEE,KAAKV,KAAL,CAAWC,YAFb,EAGE,KAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAH1B,EALmB,CAWnB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,YAAvB,EAZmB,CAcnB;AACA;;AACAL,MAAAA,KAAK,CAACkB,IAAN,CAAW,gBAAX,EAA6BN,QAA7B;AACD,KAhC8B;;AAAA,SAoC/BO,QApC+B,GAoCpB,MAAM;AACf,UAAI,KAAKf,KAAL,CAAWC,YAAf,EAA6B;AAE3B,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sCAAe,KAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sCAAe,KAAKX,KAAL,CAAWC,YAAX,CAAwBe,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,yCACiB,GADjB,EAEG,KAAKhB,KAAL,CAAWC,YAAX,CAAwBgB,gBAAxB,CAAyCC,YAAzC,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAbD,MAaO;AACL,4BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;AACF,KA1D8B;AAAA;;AA4D/BC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAE,KAAKjB;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAE,KAAKK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAOK,KAAKQ,QAAL,EAPL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAxE8B;;AA6EnC,eAAehB,UAAf","sourcesContent":["import axios from 'axios';\r\nimport React,{Component} from 'react'; \r\n\r\nclass UserUpload extends Component { \r\n\r\n    state = { \r\n  \r\n      // Initially, no file is selected \r\n      selectedFile: null\r\n    }; \r\n     \r\n    // On file select (from the pop up) \r\n    onFileChange = event => { \r\n      // Update the state \r\n      this.setState({ selectedFile: event.target.files[0] }); \r\n    }; \r\n     \r\n    // On file upload (click the upload button) \r\n    onFileUpload = () => { \r\n      // Create an object of formData \r\n      const formData = new FormData(); \r\n     \r\n      // Update the formData object \r\n      formData.append( \r\n        \"myFile\", \r\n        this.state.selectedFile, \r\n        this.state.selectedFile.name \r\n      ); \r\n     \r\n      // Details of the uploaded file \r\n      console.log(this.state.selectedFile); \r\n     \r\n      // Request made to the backend api \r\n      // Send formData object \r\n      axios.post(\"api/uploadfile\", formData); \r\n    }; \r\n     \r\n    // File content to be displayed after \r\n    // file upload is complete \r\n    fileData = () => { \r\n      if (this.state.selectedFile) { \r\n          \r\n        return ( \r\n          <div> \r\n            <h2>File Details:</h2> \r\n            <p>File Name: {this.state.selectedFile.name}</p> \r\n            <p>File Type: {this.state.selectedFile.type}</p> \r\n            <p> \r\n              Last Modified:{\" \"} \r\n              {this.state.selectedFile.lastModifiedDate.toDateString()} \r\n            </p> \r\n          </div> \r\n        ); \r\n      } else { \r\n        return ( \r\n          <div> \r\n            <br /> \r\n            <h4>Choose before Pressing the Upload button</h4> \r\n          </div> \r\n        ); \r\n      } \r\n    }; \r\n     \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <input type=\"file\" onChange={this.onFileChange} />\r\n                    <button onClick={this.onFileUpload}>\r\n                        Upload!\r\n                    </button>\r\n                </div>\r\n                {this.fileData()}\r\n            </div>\r\n        );\r\n    }\r\n  } \r\n  \r\n \r\n\r\nexport default UserUpload; \r\n"]},"metadata":{},"sourceType":"module"}