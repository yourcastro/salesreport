{"ast":null,"code":"var _jsxFileName = \"D:\\\\Castro\\\\Development\\\\hr-management-portal\\\\hr-management-portal\\\\src\\\\test.js\";\nimport React from 'react';\nimport { mockEmployee } from \"./employeeMockData\";\nimport Table from 'react-responsive-data-table';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass test extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [...mockEmployee],\n      openModal: false,\n      currentRow: null,\n      dataLoad: false,\n      UserInput: \"\"\n    };\n\n    this.onRowEdit = row => {\n      console.log(row);\n      this.setState({\n        currentRow: row\n      });\n      this.onOpenModal();\n    };\n\n    this.onRowUpdate = row => {\n      console.log(row);\n      let oRow = this.state.currentRow;\n      let newRow = {\n        \"id\": oRow[0],\n        \"username\": oRow[1],\n        \"fullName\": oRow[2],\n        \"salary\": oRow[3]\n      };\n      let id = oRow[0];\n      let odataIndex = this.state.data.findIndex(x => x.id === id);\n      let odata = this.state.data;\n      odata[odataIndex] = newRow;\n      this.setState({\n        data: odata,\n        dataLoad: false\n      });\n      this.onCloseModal();\n    };\n\n    this.onRowDelete = row => {\n      console.log(row);\n      let oRow = this.state.currentRow;\n      let id = oRow[0];\n      let odata = this.state.data.filter(x => x.id != id);\n      this.setState({\n        data: odata,\n        dataLoad: false\n      });\n      this.onCloseModal();\n      alert('Deleted Successfully !');\n    };\n\n    this.onHandleChange = ele => {\n      console.log(ele);\n      let id = ele.target.id;\n      let val = ele.target.value;\n      let oRow = this.state.currentRow;\n\n      switch (id) {\n        case \"txtFullName\":\n          {\n            oRow[2] = val;\n            break;\n          }\n\n        case \"txtSalary\":\n          {\n            oRow[3] = val;\n            break;\n          }\n\n        default:\n          {\n            break;\n          }\n      }\n\n      this.setState({\n        currentRow: oRow\n      });\n    };\n\n    this.onOpenModal = () => {\n      this.setState({\n        openModal: true\n      });\n    };\n\n    this.onCloseModal = () => {\n      this.setState({\n        openModal: false\n      });\n    };\n\n    this.inputChange = ele => {\n      console.log(ele);\n      let id = ele.target.id;\n      let val = ele.target.value;\n      this.setState({\n        UserInput: val\n      });\n    };\n\n    this.onSubmitHandleChange = ele => {\n      console.log(ele);\n      let id = ele.target.id;\n      let val = ele.target.value;\n      let inputVal = this.state.UserInput;\n\n      if (inputVal != \"\") {\n        let array = [];\n\n        for (let i = 0; i <= inputVal; i++) {\n          array.push(i);\n        }\n\n        console.log(array);\n\n        for (let i = 0; i < array.length; i++) {\n          if (i == 0) {\n            console.log(i);\n          } else {\n            let index1 = array[i];\n            let index2 = array[i + 1];\n            let final = index1 + index2;\n            console.log(final);\n          }\n        }\n      }\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    let dataGrid = this.state.data;\n    console.log(dataGrid);\n    let id = this.state.currentRow != null ? this.state.currentRow[0] : \"\";\n    let userName = this.state.currentRow != null ? this.state.currentRow[1] : \"\";\n    let fullName = this.state.currentRow != null ? this.state.currentRow[2] : \"\";\n    let salary = this.state.currentRow != null ? this.state.currentRow[3] : \"\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"bgColor\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"txtInput\",\n        value: this.state.UserInput,\n        onChange: this.inputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Submit\",\n        onClick: this.onSubmitHandleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default test;","map":{"version":3,"sources":["D:/Castro/Development/hr-management-portal/hr-management-portal/src/test.js"],"names":["React","mockEmployee","Table","Modal","test","Component","state","data","openModal","currentRow","dataLoad","UserInput","onRowEdit","row","console","log","setState","onOpenModal","onRowUpdate","oRow","newRow","id","odataIndex","findIndex","x","odata","onCloseModal","onRowDelete","filter","alert","onHandleChange","ele","target","val","value","inputChange","onSubmitHandleChange","inputVal","array","i","push","length","index1","index2","final","componentDidMount","render","dataGrid","userName","fullName","salary"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { mockEmployee } from \"./employeeMockData\";\r\nimport Table from 'react-responsive-data-table';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\n\r\nclass test extends React.Component {\r\n\r\n  state = {\r\n    data: [...mockEmployee],\r\n    openModal:false,\r\n    currentRow:null,\r\n    dataLoad:false,\r\n    UserInput:\"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  \r\n  onRowEdit = (row) => {\r\n    console.log(row);\r\n    this.setState({ currentRow: row });\r\n    this.onOpenModal();\r\n  };\r\n\r\n  onRowUpdate = (row) => {\r\n    console.log(row);\r\n    let oRow = this.state.currentRow;\r\n    let newRow = {\r\n      \"id\": oRow[0],\r\n      \"username\": oRow[1],\r\n      \"fullName\": oRow[2],\r\n      \"salary\": oRow[3]\r\n    };\r\n\r\n    let id = oRow[0];\r\n    let odataIndex = this.state.data.findIndex(x => x.id === id);\r\n    let odata = this.state.data;\r\n    odata[odataIndex] = newRow;\r\n    this.setState({ data: odata, dataLoad: false });\r\n    this.onCloseModal();\r\n  };\r\n\r\n  onRowDelete = (row) => {\r\n    console.log(row);\r\n    let oRow = this.state.currentRow;\r\n    let id = oRow[0];\r\n    let odata = this.state.data.filter(x => x.id != id);\r\n    this.setState({ data: odata, dataLoad: false });\r\n    this.onCloseModal();\r\n    alert('Deleted Successfully !');\r\n  };\r\n\r\n  onHandleChange = (ele) => {\r\n    console.log(ele);\r\n    let id = ele.target.id;\r\n    let val = ele.target.value;\r\n    let oRow = this.state.currentRow;\r\n\r\n    switch(id){\r\n      \r\n      case \"txtFullName\":{\r\n        oRow[2] = val;\r\n        break;\r\n      }\r\n\r\n      case \"txtSalary\":{\r\n        oRow[3] = val;\r\n        break;\r\n      }\r\n      \r\n      default:{\r\n        break;\r\n      }\r\n\r\n    }\r\n\r\n    this.setState({ currentRow: oRow });\r\n    \r\n  };\r\n\r\n  onOpenModal = () => {\r\n    this.setState({ openModal: true });\r\n  };\r\n\r\n  onCloseModal = () => {\r\n    this.setState({ openModal: false });\r\n  };\r\n\r\n\r\n  inputChange = (ele) => {\r\n    console.log(ele);\r\n    let id = ele.target.id;\r\n    let val = ele.target.value;\r\n    this.setState({ UserInput: val});\r\n  };\r\n\r\n  //0, 1, 1, 2, 3, 5, 8, 13, 21 => 8 \r\n  onSubmitHandleChange = (ele) => {\r\n    console.log(ele);\r\n    let id = ele.target.id;\r\n    let val = ele.target.value;\r\n    let inputVal = this.state.UserInput;\r\n    \r\n    if (inputVal != \"\") {\r\n      let array = [];\r\n      for (let i = 0; i <= inputVal; i++) {\r\n        array.push(i);\r\n      }\r\n   \r\n      console.log(array);\r\n\r\n      for (let i = 0; i < array.length; i++) {\r\n        if (i == 0) {\r\n          console.log(i);\r\n        }\r\n        else {\r\n          let index1 = array[i];\r\n          let index2 = array[i + 1];\r\n          let final = index1 + index2;\r\n          console.log(final);\r\n        }\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n  \r\n  \r\n  render() {\r\n\r\n    let dataGrid = this.state.data;\r\n    console.log(dataGrid);\r\n    let id = this.state.currentRow != null ? this.state.currentRow[0] : \"\";\r\n    let userName = this.state.currentRow != null ? this.state.currentRow[1] : \"\";\r\n    let fullName = this.state.currentRow != null ? this.state.currentRow[2] : \"\";\r\n    let salary = this.state.currentRow != null ? this.state.currentRow[3] : \"\";\r\n\r\n    \r\n      return (\r\n        <div class=\"bgColor\">\r\n          <input name=\"txtInput\" value={this.state.UserInput} onChange={this.inputChange}></input>\r\n          <input type=\"button\" value=\"Submit\" onClick={this.onSubmitHandleChange}></input>\r\n        </div>\r\n      );\r\n    \r\n\r\n    \r\n  }\r\n\r\n}\r\n\r\n\r\nexport default test;\r\n\r\n"]},"metadata":{},"sourceType":"module"}