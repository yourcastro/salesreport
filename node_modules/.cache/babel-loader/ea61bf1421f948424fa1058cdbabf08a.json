{"ast":null,"code":"import { sampleProducts } from \"./employeeMockData\";\nlet data = [...sampleProducts];\n\nconst generateId = data => data.reduce((acc, current) => Math.max(acc, current.ProductID), 0) + 1;\n\nexport const insertItem = item => {\n  item.ProductID = generateId(data);\n  item.inEdit = false;\n  data.unshift(item);\n  return data;\n};\nexport const getItems = () => {\n  return data;\n};\nexport const updateItem = item => {\n  let index = data.findIndex(record => record.ProductID === item.ProductID);\n  data[index] = item;\n  return data;\n};\nexport const deleteItem = item => {\n  let index = data.findIndex(record => record.ProductID === item.ProductID);\n  data.splice(index, 1);\n  return data;\n};","map":{"version":3,"sources":["D:/Castro/Development/hr-management-portal/hr-management-portal/src/services.js"],"names":["sampleProducts","data","generateId","reduce","acc","current","Math","max","ProductID","insertItem","item","inEdit","unshift","getItems","updateItem","index","findIndex","record","deleteItem","splice"],"mappings":"AAAA,SAASA,cAAT,QAA+B,oBAA/B;AAEA,IAAIC,IAAI,GAAG,CAAC,GAAGD,cAAJ,CAAX;;AAEA,MAAME,UAAU,GAAGD,IAAI,IACnBA,IAAI,CAACE,MAAL,CAAY,CAACC,GAAD,EAAMC,OAAN,KAAkBC,IAAI,CAACC,GAAL,CAASH,GAAT,EAAcC,OAAO,CAACG,SAAtB,CAA9B,EAAgE,CAAhE,IAAqE,CADzE;;AAGA,OAAO,MAAMC,UAAU,GAAGC,IAAI,IAAI;AAC9BA,EAAAA,IAAI,CAACF,SAAL,GAAiBN,UAAU,CAACD,IAAD,CAA3B;AACAS,EAAAA,IAAI,CAACC,MAAL,GAAc,KAAd;AACAV,EAAAA,IAAI,CAACW,OAAL,CAAaF,IAAb;AACA,SAAOT,IAAP;AACH,CALM;AAOP,OAAO,MAAMY,QAAQ,GAAG,MAAM;AAC1B,SAAOZ,IAAP;AACH,CAFM;AAIP,OAAO,MAAMa,UAAU,GAAGJ,IAAI,IAAI;AAC9B,MAAIK,KAAK,GAAGd,IAAI,CAACe,SAAL,CAAeC,MAAM,IAAIA,MAAM,CAACT,SAAP,KAAqBE,IAAI,CAACF,SAAnD,CAAZ;AACAP,EAAAA,IAAI,CAACc,KAAD,CAAJ,GAAcL,IAAd;AACA,SAAOT,IAAP;AACH,CAJM;AAMP,OAAO,MAAMiB,UAAU,GAAGR,IAAI,IAAI;AAC9B,MAAIK,KAAK,GAAGd,IAAI,CAACe,SAAL,CAAeC,MAAM,IAAIA,MAAM,CAACT,SAAP,KAAqBE,IAAI,CAACF,SAAnD,CAAZ;AACAP,EAAAA,IAAI,CAACkB,MAAL,CAAYJ,KAAZ,EAAmB,CAAnB;AACA,SAAOd,IAAP;AACH,CAJM","sourcesContent":["import { sampleProducts } from \"./employeeMockData\";\r\n\r\nlet data = [...sampleProducts];\r\n\r\nconst generateId = data =>\r\n    data.reduce((acc, current) => Math.max(acc, current.ProductID), 0) + 1;\r\n\r\nexport const insertItem = item => {\r\n    item.ProductID = generateId(data);\r\n    item.inEdit = false;\r\n    data.unshift(item);\r\n    return data;\r\n};\r\n\r\nexport const getItems = () => {\r\n    return data;\r\n};\r\n\r\nexport const updateItem = item => {\r\n    let index = data.findIndex(record => record.ProductID === item.ProductID);\r\n    data[index] = item;\r\n    return data;\r\n};\r\n\r\nexport const deleteItem = item => {\r\n    let index = data.findIndex(record => record.ProductID === item.ProductID);\r\n    data.splice(index, 1);\r\n    return data;\r\n};"]},"metadata":{},"sourceType":"module"}