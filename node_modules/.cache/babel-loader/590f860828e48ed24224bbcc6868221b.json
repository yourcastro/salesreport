{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { orderBy as kendoDataQueryOrderBy, filterBy as kendoDataQueryFilterBy } from '@progress/kendo-data-query'; // Gets and sets the children. Returns the children or the re-created item with the new children.\n\nfunction children(item, subItemsField, subItems) {\n  var _a;\n\n  if (subItems) {\n    return __assign({}, item, (_a = {}, _a[subItemsField] = subItems.length ? subItems.slice() : undefined, _a));\n  } else {\n    return item && item[subItemsField] ? item[subItemsField].slice() : [];\n  }\n}\n\nfunction sortChildren(dataItem, sort, subItemsField) {\n  var _a;\n\n  if (dataItem[subItemsField]) {\n    var item = children(dataItem, subItemsField, kendoDataQueryOrderBy(children(dataItem, subItemsField), sort));\n    var subItems = children(item, subItemsField).map(function (root) {\n      return sortChildren(root, sort, subItemsField);\n    });\n    return __assign({}, item, (_a = {}, _a[subItemsField] = subItems, _a));\n  }\n\n  return dataItem;\n}\n/**\n * Orders the specified tree according to the provided sort descriptors.\n *\n * @param {T[]} data - The data that will be sorted.\n * @param {SortDescriptor[]} descriptors - The descriptors by which the data will be sorted.\n * @param {string} subItemsField - The field which points to the subitems collection of each data item.\n * @returns {T[]} - The sorted data.\n */\n\n\nexport function orderBy(data, descriptors, subItemsField) {\n  var sorted = kendoDataQueryOrderBy(data, descriptors);\n  sorted = sorted.map(function (dataItem) {\n    return sortChildren(dataItem, descriptors, subItemsField);\n  });\n  return sorted;\n}\n\nfunction filterChildren(dataItem, filters, subItemsField) {\n  var subItems = children(dataItem, subItemsField);\n\n  if (subItems && subItems.length) {\n    subItems = subItems.map(function (item) {\n      return filterChildren(item, filters, subItemsField);\n    });\n    var hasChildrenFilter = {\n      operator: function (item) {\n        return Boolean((item[subItemsField] || []).length);\n      }\n    };\n    var filter = {\n      filters: [{\n        filters: filters,\n        logic: 'and'\n      }, hasChildrenFilter],\n      logic: 'or'\n    };\n    var filtered = kendoDataQueryFilterBy(subItems, filter);\n    return children(dataItem, subItemsField, filtered);\n  }\n\n  return dataItem;\n}\n/**\n * Filters the provided data tree according to the specified `Array<FilterDescriptor|CompositeFilterDescriptor>`.\n *\n * @param {T[]} data - The data that will be filtered.\n * @param {FilterDescriptor[]|CompositeFilterDescriptor[]} descriptors - The filter criteria that will be applied.\n * @param {string} subItemsField - The field which points to the subitems collection of each data item.\n * @returns {T[]} - The filtered data.\n */\n\n\nexport function filterBy(data, descriptors, subItemsField) {\n  var _a;\n\n  var filtered = (_a = {}, _a[subItemsField] = data.slice(), _a);\n  filtered = filterChildren(filtered, descriptors, subItemsField);\n  return filtered[subItemsField] || [];\n}","map":{"version":3,"sources":["../../../src/utils/data-operations.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { orderBy as kendoDataQueryOrderBy, filterBy as kendoDataQueryFilterBy } from '@progress/kendo-data-query';\n// Gets and sets the children. Returns the children or the re-created item with the new children.\nfunction children(item, subItemsField, subItems) {\n    var _a;\n    if (subItems) {\n        return __assign({}, item, (_a = {}, _a[subItemsField] = subItems.length ? subItems.slice() : undefined, _a));\n    }\n    else {\n        return item && item[subItemsField] ? item[subItemsField].slice() : [];\n    }\n}\nfunction sortChildren(dataItem, sort, subItemsField) {\n    var _a;\n    if (dataItem[subItemsField]) {\n        var item = children(dataItem, subItemsField, kendoDataQueryOrderBy(children(dataItem, subItemsField), sort));\n        var subItems = children(item, subItemsField).map(function (root) { return sortChildren(root, sort, subItemsField); });\n        return __assign({}, item, (_a = {}, _a[subItemsField] = subItems, _a));\n    }\n    return dataItem;\n}\n/**\n * Orders the specified tree according to the provided sort descriptors.\n *\n * @param {T[]} data - The data that will be sorted.\n * @param {SortDescriptor[]} descriptors - The descriptors by which the data will be sorted.\n * @param {string} subItemsField - The field which points to the subitems collection of each data item.\n * @returns {T[]} - The sorted data.\n */\nexport function orderBy(data, descriptors, subItemsField) {\n    var sorted = kendoDataQueryOrderBy(data, descriptors);\n    sorted = sorted.map(function (dataItem) { return sortChildren(dataItem, descriptors, subItemsField); });\n    return sorted;\n}\nfunction filterChildren(dataItem, filters, subItemsField) {\n    var subItems = children(dataItem, subItemsField);\n    if (subItems && subItems.length) {\n        subItems = subItems.map(function (item) { return filterChildren(item, filters, subItemsField); });\n        var hasChildrenFilter = { operator: function (item) { return Boolean((item[subItemsField] || []).length); } };\n        var filter = {\n            filters: [\n                { filters: filters, logic: 'and' },\n                hasChildrenFilter\n            ],\n            logic: 'or'\n        };\n        var filtered = kendoDataQueryFilterBy(subItems, filter);\n        return children(dataItem, subItemsField, filtered);\n    }\n    return dataItem;\n}\n/**\n * Filters the provided data tree according to the specified `Array<FilterDescriptor|CompositeFilterDescriptor>`.\n *\n * @param {T[]} data - The data that will be filtered.\n * @param {FilterDescriptor[]|CompositeFilterDescriptor[]} descriptors - The filter criteria that will be applied.\n * @param {string} subItemsField - The field which points to the subitems collection of each data item.\n * @returns {T[]} - The filtered data.\n */\nexport function filterBy(data, descriptors, subItemsField) {\n    var _a;\n    var filtered = (_a = {}, _a[subItemsField] = data.slice(), _a);\n    filtered = filterChildren(filtered, descriptors, subItemsField);\n    return filtered[subItemsField] || [];\n}\n//# sourceMappingURL=data-operations.js.map"]},"metadata":{},"sourceType":"module"}