{"ast":null,"code":"define([\"./core\", \"./core/toType\", \"./var/rcheckableType\", \"./var/isFunction\", \"./core/init\", \"./traversing\", // filter\n\"./attributes/prop\"], function (jQuery, toType, rcheckableType, isFunction) {\n  \"use strict\";\n\n  var rbracket = /\\[\\]$/,\n      rCRLF = /\\r?\\n/g,\n      rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n      rsubmittable = /^(?:input|select|textarea|keygen)/i;\n\n  function buildParams(prefix, obj, traditional, add) {\n    var name;\n\n    if (Array.isArray(obj)) {\n      // Serialize array item.\n      jQuery.each(obj, function (i, v) {\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v);\n        } else {\n          // Item is non-scalar (array or object), encode its numeric index.\n          buildParams(prefix + \"[\" + (typeof v === \"object\" && v != null ? i : \"\") + \"]\", v, traditional, add);\n        }\n      });\n    } else if (!traditional && toType(obj) === \"object\") {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n      }\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj);\n    }\n  } // Serialize an array of form elements or a set of\n  // key/values into a query string\n\n\n  jQuery.param = function (a, traditional) {\n    var prefix,\n        s = [],\n        add = function (key, valueOrFunction) {\n      // If value is a function, invoke it and use its return value\n      var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n      s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value == null ? \"\" : value);\n    };\n\n    if (a == null) {\n      return \"\";\n    } // If an array was passed in, assume that it is an array of form elements.\n\n\n    if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n      // Serialize the form elements\n      jQuery.each(a, function () {\n        add(this.name, this.value);\n      });\n    } else {\n      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in a) {\n        buildParams(prefix, a[prefix], traditional, add);\n      }\n    } // Return the resulting serialization\n\n\n    return s.join(\"&\");\n  };\n\n  jQuery.fn.extend({\n    serialize: function () {\n      return jQuery.param(this.serializeArray());\n    },\n    serializeArray: function () {\n      return this.map(function () {\n        // Can add propHook for \"elements\" to filter or add form elements\n        var elements = jQuery.prop(this, \"elements\");\n        return elements ? jQuery.makeArray(elements) : this;\n      }).filter(function () {\n        var type = this.type; // Use .is( \":disabled\" ) so that fieldset[disabled] works\n\n        return this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n      }).map(function (_i, elem) {\n        var val = jQuery(this).val();\n\n        if (val == null) {\n          return null;\n        }\n\n        if (Array.isArray(val)) {\n          return jQuery.map(val, function (val) {\n            return {\n              name: elem.name,\n              value: val.replace(rCRLF, \"\\r\\n\")\n            };\n          });\n        }\n\n        return {\n          name: elem.name,\n          value: val.replace(rCRLF, \"\\r\\n\")\n        };\n      }).get();\n    }\n  });\n  return jQuery;\n});","map":{"version":3,"sources":["D:/Castro/Development/hr-management-portal/hr-management-portal/node_modules/jquery/src/serialize.js"],"names":["define","jQuery","toType","rcheckableType","isFunction","rbracket","rCRLF","rsubmitterTypes","rsubmittable","buildParams","prefix","obj","traditional","add","name","Array","isArray","each","i","v","test","param","a","s","key","valueOrFunction","value","length","encodeURIComponent","jquery","isPlainObject","join","fn","extend","serialize","serializeArray","map","elements","prop","makeArray","filter","type","is","nodeName","checked","_i","elem","val","replace","get"],"mappings":"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","sourcesContent":["define( [\n\t\"./core\",\n\t\"./core/toType\",\n\t\"./var/rcheckableType\",\n\t\"./var/isFunction\",\n\t\"./core/init\",\n\t\"./traversing\", // filter\n\t\"./attributes/prop\"\n], function( jQuery, toType, rcheckableType, isFunction ) {\n\n\"use strict\";\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\tif ( a == null ) {\n\t\treturn \"\";\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} ).filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} ).map( function( _i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\nreturn jQuery;\n} );\n"]},"metadata":{},"sourceType":"script"}