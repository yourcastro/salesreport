{"ast":null,"code":"import { guid, Keys } from '@progress/kendo-react-common';\nimport { findId, findNextIdByCellIndex, findNextIdByRowIndex, getBodyElement, getHeaderElement, getNavigatableId, tableKeyboardNavigationTools as navigationTools } from './utils';\n/**\n * @hidden\n */\n\nvar onConstructor = function (options) {\n  var navigatable = options.navigatable,\n      contextStateRef = options.contextStateRef,\n      navigationStateRef = options.navigationStateRef,\n      idPrefix = options.idPrefix; // v.2: check if nested navigation\n\n  if (navigatable) {\n    contextStateRef.current = {\n      activeId: '',\n      level: 0\n    };\n    navigationStateRef.current = {\n      activeElementIsFocused: false,\n      prevNavigationIndexes: undefined,\n      idPrefix: idPrefix || guid(),\n      navigationMatrix: [],\n      lastHeaderIndex: -1\n    };\n  }\n};\n/**\n * @hidden\n */\n\n\nvar onComponentDidMount = function (options) {\n  var scope = options.scope,\n      contextStateRef = options.contextStateRef,\n      navigationStateRef = options.navigationStateRef;\n\n  if (contextStateRef.current && navigationStateRef.current && scope) {\n    generateMatrix(options);\n    var firstId = navigationStateRef.current.navigationMatrix[0][0];\n    var firstIdElement = navigationTools.getActiveElement(scope, firstId);\n\n    if (firstId && firstIdElement) {\n      contextStateRef.current.activeId = firstId;\n      firstIdElement.setAttribute('tabIndex', '0');\n    }\n  }\n};\n/**\n * @hidden\n */\n\n\nvar onGetSnapshotBeforeUpdate = function (options) {\n  var contextStateRef = options.contextStateRef,\n      navigationStateRef = options.navigationStateRef,\n      document = options.document;\n\n  if (contextStateRef.current && navigationStateRef.current && document) {\n    var activeElement = document.activeElement;\n    var activeId = navigationTools.getNavigatableId(activeElement);\n\n    if (activeId && activeId === contextStateRef.current.activeId) {\n      navigationStateRef.current.activeElementIsFocused = true;\n    }\n  }\n};\n/**\n * @hidden\n */\n\n\nvar onComponentDidUpdate = function (options) {\n  var scope = options.scope,\n      contextStateRef = options.contextStateRef,\n      navigationStateRef = options.navigationStateRef;\n  generateMatrix(options); // check if nested navigation\n\n  if (contextStateRef.current && navigationStateRef.current && scope) {\n    var activeElement = navigationTools.getActiveElement(scope, contextStateRef.current.activeId);\n\n    if (!activeElement) {\n      var firstId = navigationStateRef.current.navigationMatrix[0][0];\n      var firstIdElement = navigationTools.getActiveElement(scope, firstId);\n\n      if (firstId && firstIdElement) {\n        contextStateRef.current.activeId = firstId;\n        firstIdElement.setAttribute('tabIndex', '0');\n\n        if (navigationStateRef.current.activeElementIsFocused) {\n          firstIdElement.focus();\n        }\n      }\n    }\n\n    navigationStateRef.current.activeElementIsFocused = false;\n  }\n};\n/**\n * @hidden\n */\n\n\nvar onFocus = function (event, options) {\n  var contextStateRef = options.contextStateRef;\n\n  if (event.isDefaultPrevented()) {\n    return;\n  }\n\n  if (!contextStateRef.current) {\n    return;\n  }\n\n  var focusedElement = event.target;\n  var activeId = navigationTools.getNavigatableId(focusedElement);\n\n  if (activeId && activeId !== contextStateRef.current.activeId) {\n    var scope = navigationTools.getClosestScope(focusedElement);\n\n    if (!scope) {\n      return;\n    }\n\n    var prevElement = navigationTools.getActiveElement(scope, contextStateRef.current.activeId);\n\n    if (prevElement) {\n      prevElement.setAttribute('tabIndex', '-1');\n    }\n\n    focusedElement.setAttribute('tabIndex', '0');\n    contextStateRef.current.activeId = activeId;\n  }\n};\n/**\n * @hidden\n */\n\n\nvar onKeyDown = function (event, options) {\n  var contextStateRef = options.contextStateRef,\n      navigationStateRef = options.navigationStateRef,\n      onNavigationAction = options.onNavigationAction;\n\n  if (event.isDefaultPrevented()) {\n    return;\n  }\n\n  if (!contextStateRef.current || !navigationStateRef.current) {\n    return;\n  }\n\n  if (event.keyCode === Keys.esc) {\n    // activate navigation\n    var elementForFocus = navigationTools.getClosestNavigatableElement(event.target);\n    navigationTools.focusElement({\n      elementForFocus: elementForFocus,\n      event: event,\n      contextStateRef: contextStateRef\n    });\n    return;\n  }\n\n  var element = event.target;\n  var elementId = navigationTools.getNavigatableId(element);\n  var dataLevel = navigationTools.getNavigatableLevel(element);\n  var scope = navigationTools.getClosestScope(element);\n  var matrix = navigationStateRef.current.navigationMatrix;\n\n  if (dataLevel !== undefined && scope) {\n    if (event.keyCode === Keys.enter) {\n      // activate nested navigation or focus focusable element\n      var navigatableElement = navigationTools.getNavigatableElement(element, {\n        level: dataLevel + 1\n      });\n\n      if (navigatableElement) {\n        navigationTools.focusElement({\n          elementForFocus: navigatableElement,\n          event: event,\n          contextStateRef: contextStateRef,\n          prevElement: element\n        });\n        return;\n      } else {\n        var elementForFocus = navigationTools.getFocusableElements(element)[0];\n        navigationTools.focusElement({\n          elementForFocus: elementForFocus,\n          event: event,\n          contextStateRef: contextStateRef,\n          prevElement: element\n        });\n        return;\n      }\n    }\n\n    if (event.keyCode === Keys.up || event.keyCode === Keys.down || event.keyCode === Keys.left || event.keyCode === Keys.right) {\n      var isReverse = event.keyCode === Keys.up || event.keyCode === Keys.left;\n      var isVertical = event.keyCode === Keys.up || event.keyCode === Keys.down;\n      var currentIdIndexes = void 0;\n\n      if (navigationStateRef.current && navigationStateRef.current.prevNavigationIndexes) {\n        var _a = navigationStateRef.current.prevNavigationIndexes,\n            rowIndex = _a[0],\n            cellIndex = _a[1];\n\n        if (matrix[rowIndex][cellIndex] === elementId) {\n          currentIdIndexes = navigationStateRef.current.prevNavigationIndexes;\n        } else {\n          currentIdIndexes = findId(matrix, elementId);\n        }\n      } else {\n        currentIdIndexes = findId(matrix, elementId);\n      }\n\n      if (currentIdIndexes) {\n        var rowIndex = currentIdIndexes[0],\n            cellIndex = currentIdIndexes[1];\n\n        var _b = isVertical ? findNextIdByRowIndex(rowIndex, cellIndex, elementId, matrix, isReverse) : findNextIdByCellIndex(rowIndex, cellIndex, elementId, matrix, isReverse),\n            idForFocus = _b[0],\n            currentIndexes = _b[1];\n\n        if (idForFocus) {\n          var elementForFocus = navigationTools.getActiveElement(scope, idForFocus); // emit event\n\n          navigationTools.focusElement({\n            elementForFocus: elementForFocus,\n            event: event,\n            contextStateRef: contextStateRef,\n            prevElement: element\n          });\n          navigationStateRef.current.prevNavigationIndexes = currentIndexes;\n\n          if (onNavigationAction) {\n            onNavigationAction({\n              focusElement: elementForFocus,\n              event: event\n            });\n          }\n        }\n      }\n    }\n  }\n};\n/**\n * @hidden\n */\n\n\nvar generateMatrix = function (options) {\n  var navigationStateRef = options.navigationStateRef,\n      scope = options.scope;\n\n  if (!navigationStateRef.current || !scope) {\n    return;\n  }\n\n  var matrix = [];\n  var thead = getHeaderElement(scope);\n  var tbody = getBodyElement(scope);\n\n  if (!thead || !tbody) {\n    return;\n  }\n\n  var headerRows = Array.from(thead.children);\n  var bodyRows = Array.from(tbody.children);\n  headerRows.concat(bodyRows).forEach(function (row, rowIndex) {\n    Array.from(row.children).forEach(function (cell) {\n      var cellId = getNavigatableId(cell);\n\n      if (!cellId) {\n        return;\n      } // cell is not navigatable\n\n\n      var rowSpan = cell.rowSpan || 1;\n      var cellSpan = cell.colSpan || 1;\n      var cellIndex;\n\n      for (var depth = rowIndex, maxDepth = rowIndex + rowSpan; depth < maxDepth; depth++) {\n        if (!matrix[depth]) {\n          matrix[depth] = [];\n        }\n\n        if (cellIndex === undefined) {\n          var freeSlotIndex = matrix[depth].findIndex(function (mi) {\n            return !mi;\n          });\n          cellIndex = freeSlotIndex > -1 ? freeSlotIndex : matrix[depth].length;\n        }\n\n        matrix[depth][cellIndex] = cellId || '';\n      }\n\n      for (var depth = cellIndex + 1, maxDepth = cellIndex + cellSpan; depth < maxDepth; depth++) {\n        matrix[rowIndex][depth] = cellId || '';\n      }\n    });\n  });\n  navigationStateRef.current.navigationMatrix = matrix.filter(function (row) {\n    return !!row;\n  });\n  navigationStateRef.current.lastHeaderIndex = headerRows.length - 1;\n};\n/**\n * @hidden\n */\n\n\nexport var tableKeyboardNavigation = {\n  onConstructor: onConstructor,\n  onComponentDidMount: onComponentDidMount,\n  onGetSnapshotBeforeUpdate: onGetSnapshotBeforeUpdate,\n  onComponentDidUpdate: onComponentDidUpdate,\n  onFocus: onFocus,\n  onKeyDown: onKeyDown,\n  generateMatrix: generateMatrix\n};","map":{"version":3,"sources":["../../../src/navigation/TableKeyboardNavigation.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { guid, Keys } from '@progress/kendo-react-common';\nimport { findId, findNextIdByCellIndex, findNextIdByRowIndex, getBodyElement, getHeaderElement, getNavigatableId, tableKeyboardNavigationTools as navigationTools } from './utils';\n/**\n * @hidden\n */\nvar onConstructor = function (options) {\n    var navigatable = options.navigatable, contextStateRef = options.contextStateRef, navigationStateRef = options.navigationStateRef, idPrefix = options.idPrefix;\n    // v.2: check if nested navigation\n    if (navigatable) {\n        contextStateRef.current = {\n            activeId: '',\n            level: 0\n        };\n        navigationStateRef.current = {\n            activeElementIsFocused: false,\n            prevNavigationIndexes: undefined,\n            idPrefix: idPrefix || guid(),\n            navigationMatrix: [],\n            lastHeaderIndex: -1\n        };\n    }\n};\n/**\n * @hidden\n */\nvar onComponentDidMount = function (options) {\n    var scope = options.scope, contextStateRef = options.contextStateRef, navigationStateRef = options.navigationStateRef;\n    if (contextStateRef.current && navigationStateRef.current && scope) {\n        generateMatrix(options);\n        var firstId = navigationStateRef.current.navigationMatrix[0][0];\n        var firstIdElement = navigationTools.getActiveElement(scope, firstId);\n        if (firstId && firstIdElement) {\n            contextStateRef.current.activeId = firstId;\n            firstIdElement.setAttribute('tabIndex', '0');\n        }\n    }\n};\n/**\n * @hidden\n */\nvar onGetSnapshotBeforeUpdate = function (options) {\n    var contextStateRef = options.contextStateRef, navigationStateRef = options.navigationStateRef, document = options.document;\n    if (contextStateRef.current && navigationStateRef.current && document) {\n        var activeElement = document.activeElement;\n        var activeId = navigationTools.getNavigatableId(activeElement);\n        if (activeId && activeId === contextStateRef.current.activeId) {\n            navigationStateRef.current.activeElementIsFocused = true;\n        }\n    }\n};\n/**\n * @hidden\n */\nvar onComponentDidUpdate = function (options) {\n    var scope = options.scope, contextStateRef = options.contextStateRef, navigationStateRef = options.navigationStateRef;\n    generateMatrix(options);\n    // check if nested navigation\n    if (contextStateRef.current && navigationStateRef.current && scope) {\n        var activeElement = navigationTools.getActiveElement(scope, contextStateRef.current.activeId);\n        if (!activeElement) {\n            var firstId = navigationStateRef.current.navigationMatrix[0][0];\n            var firstIdElement = navigationTools.getActiveElement(scope, firstId);\n            if (firstId && firstIdElement) {\n                contextStateRef.current.activeId = firstId;\n                firstIdElement.setAttribute('tabIndex', '0');\n                if (navigationStateRef.current.activeElementIsFocused) {\n                    firstIdElement.focus();\n                }\n            }\n        }\n        navigationStateRef.current.activeElementIsFocused = false;\n    }\n};\n/**\n * @hidden\n */\nvar onFocus = function (event, options) {\n    var contextStateRef = options.contextStateRef;\n    if (event.isDefaultPrevented()) {\n        return;\n    }\n    if (!contextStateRef.current) {\n        return;\n    }\n    var focusedElement = event.target;\n    var activeId = navigationTools.getNavigatableId(focusedElement);\n    if (activeId && activeId !== contextStateRef.current.activeId) {\n        var scope = navigationTools.getClosestScope(focusedElement);\n        if (!scope) {\n            return;\n        }\n        var prevElement = navigationTools.getActiveElement(scope, contextStateRef.current.activeId);\n        if (prevElement) {\n            prevElement.setAttribute('tabIndex', '-1');\n        }\n        focusedElement.setAttribute('tabIndex', '0');\n        contextStateRef.current.activeId = activeId;\n    }\n};\n/**\n * @hidden\n */\nvar onKeyDown = function (event, options) {\n    var contextStateRef = options.contextStateRef, navigationStateRef = options.navigationStateRef, onNavigationAction = options.onNavigationAction;\n    if (event.isDefaultPrevented()) {\n        return;\n    }\n    if (!contextStateRef.current || !navigationStateRef.current) {\n        return;\n    }\n    if (event.keyCode === Keys.esc) {\n        // activate navigation\n        var elementForFocus = navigationTools.getClosestNavigatableElement(event.target);\n        navigationTools.focusElement({ elementForFocus: elementForFocus, event: event, contextStateRef: contextStateRef });\n        return;\n    }\n    var element = event.target;\n    var elementId = navigationTools.getNavigatableId(element);\n    var dataLevel = navigationTools.getNavigatableLevel(element);\n    var scope = navigationTools.getClosestScope(element);\n    var matrix = navigationStateRef.current.navigationMatrix;\n    if (dataLevel !== undefined && scope) {\n        if (event.keyCode === Keys.enter) {\n            // activate nested navigation or focus focusable element\n            var navigatableElement = navigationTools.getNavigatableElement(element, { level: dataLevel + 1 });\n            if (navigatableElement) {\n                navigationTools.focusElement({\n                    elementForFocus: navigatableElement,\n                    event: event,\n                    contextStateRef: contextStateRef,\n                    prevElement: element\n                });\n                return;\n            }\n            else {\n                var elementForFocus = navigationTools.getFocusableElements(element)[0];\n                navigationTools.focusElement({ elementForFocus: elementForFocus, event: event, contextStateRef: contextStateRef, prevElement: element });\n                return;\n            }\n        }\n        if (event.keyCode === Keys.up ||\n            event.keyCode === Keys.down ||\n            event.keyCode === Keys.left ||\n            event.keyCode === Keys.right) {\n            var isReverse = event.keyCode === Keys.up || event.keyCode === Keys.left;\n            var isVertical = event.keyCode === Keys.up || event.keyCode === Keys.down;\n            var currentIdIndexes = void 0;\n            if (navigationStateRef.current && navigationStateRef.current.prevNavigationIndexes) {\n                var _a = navigationStateRef.current.prevNavigationIndexes, rowIndex = _a[0], cellIndex = _a[1];\n                if (matrix[rowIndex][cellIndex] === elementId) {\n                    currentIdIndexes = navigationStateRef.current.prevNavigationIndexes;\n                }\n                else {\n                    currentIdIndexes = findId(matrix, elementId);\n                }\n            }\n            else {\n                currentIdIndexes = findId(matrix, elementId);\n            }\n            if (currentIdIndexes) {\n                var rowIndex = currentIdIndexes[0], cellIndex = currentIdIndexes[1];\n                var _b = isVertical ?\n                    findNextIdByRowIndex(rowIndex, cellIndex, elementId, matrix, isReverse) :\n                    findNextIdByCellIndex(rowIndex, cellIndex, elementId, matrix, isReverse), idForFocus = _b[0], currentIndexes = _b[1];\n                if (idForFocus) {\n                    var elementForFocus = navigationTools.getActiveElement(scope, idForFocus);\n                    // emit event\n                    navigationTools.focusElement({ elementForFocus: elementForFocus, event: event, contextStateRef: contextStateRef, prevElement: element });\n                    navigationStateRef.current.prevNavigationIndexes = currentIndexes;\n                    if (onNavigationAction) {\n                        onNavigationAction({ focusElement: elementForFocus, event: event });\n                    }\n                }\n            }\n        }\n    }\n};\n/**\n * @hidden\n */\nvar generateMatrix = function (options) {\n    var navigationStateRef = options.navigationStateRef, scope = options.scope;\n    if (!navigationStateRef.current || !scope) {\n        return;\n    }\n    var matrix = [];\n    var thead = getHeaderElement(scope);\n    var tbody = getBodyElement(scope);\n    if (!thead || !tbody) {\n        return;\n    }\n    var headerRows = Array.from(thead.children);\n    var bodyRows = Array.from(tbody.children);\n    headerRows.concat(bodyRows).forEach(function (row, rowIndex) {\n        Array.from(row.children).forEach(function (cell) {\n            var cellId = getNavigatableId(cell);\n            if (!cellId) {\n                return;\n            } // cell is not navigatable\n            var rowSpan = cell.rowSpan || 1;\n            var cellSpan = cell.colSpan || 1;\n            var cellIndex;\n            for (var depth = rowIndex, maxDepth = rowIndex + rowSpan; depth < maxDepth; depth++) {\n                if (!matrix[depth]) {\n                    matrix[depth] = [];\n                }\n                if (cellIndex === undefined) {\n                    var freeSlotIndex = matrix[depth].findIndex(function (mi) { return !mi; });\n                    cellIndex = freeSlotIndex > -1 ? freeSlotIndex : matrix[depth].length;\n                }\n                matrix[depth][cellIndex] = cellId || '';\n            }\n            for (var depth = cellIndex + 1, maxDepth = cellIndex + cellSpan; depth < maxDepth; depth++) {\n                matrix[rowIndex][depth] = cellId || '';\n            }\n        });\n    });\n    navigationStateRef.current.navigationMatrix = matrix.filter(function (row) { return !!row; });\n    navigationStateRef.current.lastHeaderIndex = headerRows.length - 1;\n};\n/**\n * @hidden\n */\nexport var tableKeyboardNavigation = {\n    onConstructor: onConstructor,\n    onComponentDidMount: onComponentDidMount,\n    onGetSnapshotBeforeUpdate: onGetSnapshotBeforeUpdate,\n    onComponentDidUpdate: onComponentDidUpdate,\n    onFocus: onFocus,\n    onKeyDown: onKeyDown,\n    generateMatrix: generateMatrix\n};\n//# sourceMappingURL=TableKeyboardNavigation.js.map"]},"metadata":{},"sourceType":"module"}