{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { canUseDOM, extendDataItem, getter, Keys, mapTree } from '@progress/kendo-react-common';\nimport { TABLE_COL_INDEX_ATTRIBUTE, TABLE_ROW_INDEX_ATTRIBUTE } from './constants';\nvar GROUP_SUBITEMS_COLLECTION = 'items';\nvar LAST_SELECTION_STATE = {};\n\nvar getCellSelection = function (currentSelection, selectedColumn) {\n  if (!currentSelection || Array.isArray(currentSelection) && currentSelection.length === 0) {\n    return [selectedColumn];\n  } else {\n    var foundIndex = currentSelection.findIndex(function (columnIndex) {\n      return columnIndex === selectedColumn;\n    });\n\n    if (foundIndex > -1) {\n      return currentSelection.filter(function (columnIndex) {\n        return columnIndex === selectedColumn;\n      });\n    } else {\n      return currentSelection.concat([selectedColumn]);\n    }\n  }\n};\n/** @hidden */\n\n\nexport var closestTagName = function (target, tagName) {\n  var currentTarget = target;\n\n  while (currentTarget) {\n    if (currentTarget.tagName === tagName) {\n      return currentTarget;\n    } else if (currentTarget.tagName === 'TABLE') {\n      return null;\n    }\n\n    currentTarget = currentTarget.parentElement;\n  }\n\n  return null;\n};\n/** @hidden */\n\nexport var getRowIndex = function (element) {\n  if (!element) {\n    return;\n  }\n\n  var rowIndex = element.getAttribute(TABLE_ROW_INDEX_ATTRIBUTE);\n  return rowIndex ? parseInt(rowIndex, 10) : undefined;\n};\n/** @hidden */\n\nexport var getColumnIndex = function (element) {\n  if (!element) {\n    return;\n  }\n\n  var colIndex = element.getAttribute(TABLE_COL_INDEX_ATTRIBUTE);\n  return colIndex ? parseInt(colIndex, 10) : undefined;\n};\n/**\n * @hidden\n *\n * Apply the selected field to the data items based on the selected state.\n *\n * @param {{data: any, selectedState:  {[id: string]: boolean | number[]}, dataItemKey: string; selectedField: string; subItemsField?: string; }} options\n * @returns {any[]}\n */\n\nexport var setSelectedState = function (options) {\n  var subItemsField = options.subItemsField || GROUP_SUBITEMS_COLLECTION;\n  var idGetter = getter(options.dataItemKey);\n  return mapTree(options.data, subItemsField, function (item) {\n    var _a;\n\n    return extendDataItem(item, subItemsField, (_a = {}, _a[options.selectedField] = options.selectedState[idGetter(item)], _a));\n  });\n};\n/**\n * Get selected state from the component KeyDown event.\n *\n * @param {{event: TableKeyDownEvent, selectedState:  {[id: string]: boolean | number[]}, dataItemKey: string}} options\n * @returns {{[id: string]: boolean | number[]}} - The new selected state.\n */\n\nexport var getSelectedStateFromKeyDown = function (options) {\n  var event = options.event,\n      dataItemKey = options.dataItemKey,\n      selectedState = options.selectedState;\n  var syntheticEvent = event.syntheticEvent,\n      nativeEvent = event.nativeEvent,\n      dataItems = event.dataItems,\n      componentId = event.componentId,\n      mode = event.mode,\n      cell = event.cell,\n      selectedField = event.selectedField;\n  var target = nativeEvent.target,\n      ctrlKey = nativeEvent.ctrlKey,\n      metaKey = nativeEvent.metaKey,\n      altKey = nativeEvent.altKey,\n      shiftKey = nativeEvent.shiftKey;\n\n  if (syntheticEvent.isDefaultPrevented() || nativeEvent.keyCode !== Keys.enter) {\n    return selectedState;\n  }\n\n  var tdElement = closestTagName(target, 'TD');\n  var trElement = closestTagName(target, 'TR');\n  var colIndex = getColumnIndex(tdElement);\n  var rowIndex = getRowIndex(trElement);\n  var selectionState = {};\n\n  if (tdElement && trElement && rowIndex !== undefined && colIndex !== undefined) {\n    selectionState = getSelectedState({\n      selectedState: selectedState,\n      dataItemKey: dataItemKey,\n      event: {\n        ctrlKey: ctrlKey,\n        metaKey: metaKey,\n        altKey: altKey,\n        shiftKey: shiftKey,\n        dataItems: dataItems,\n        cell: cell,\n        mode: mode,\n        selectedField: selectedField,\n        componentId: componentId,\n        startColIndex: colIndex,\n        endColIndex: colIndex,\n        startRowIndex: rowIndex,\n        endRowIndex: rowIndex,\n        isDrag: false,\n        syntheticEvent: syntheticEvent,\n        nativeEvent: nativeEvent,\n        target: event.target,\n        dataItem: null\n      }\n    });\n  }\n\n  return selectionState;\n};\n/**\n * Get selected state from the component selection event.\n *\n * @param {{event: TableSelectionChangeEvent, selectedState:  {[id: string]: boolean | number[]}, dataItemKey: string}} options\n * @returns {{[id: string]: boolean | number[]}} - The new selected state.\n */\n\nexport var getSelectedState = function (options) {\n  var event = options.event,\n      dataItemKey = options.dataItemKey,\n      prevSelectedState = options.selectedState;\n  var dataItems = event.dataItems,\n      startRowIndex = event.startRowIndex,\n      endRowIndex = event.endRowIndex,\n      startColIndex = event.startColIndex,\n      endColIndex = event.endColIndex,\n      cell = event.cell,\n      isDrag = event.isDrag,\n      ctrlKey = event.ctrlKey,\n      shiftKey = event.shiftKey,\n      metaKey = event.metaKey,\n      componentId = event.componentId,\n      mode = event.mode,\n      dataItem = event.dataItem;\n  var idGetter = getter(dataItemKey);\n  var selectionState = {};\n  var isInputEvent = dataItem !== null;\n\n  if (mode === 'single') {\n    var currentDataItem = dataItems.slice(startRowIndex, startRowIndex + 1)[0];\n    var itemId = idGetter(currentDataItem);\n    LAST_SELECTION_STATE[componentId] = {\n      rowIndex: startRowIndex,\n      colIndex: startColIndex\n    };\n    selectionState[itemId] = cell ? [startColIndex] : true;\n  } else if (isDrag || !shiftKey && !ctrlKey && !metaKey && !isInputEvent) {\n    if (!isDrag) {\n      LAST_SELECTION_STATE[componentId] = {\n        rowIndex: startRowIndex,\n        colIndex: startColIndex\n      };\n    }\n\n    var selectedColumns_1 = [];\n\n    for (var i = startColIndex; i <= endColIndex; i++) {\n      selectedColumns_1.push(i);\n    }\n\n    var selectedDataItems = dataItems.slice(startRowIndex, endRowIndex + 1);\n    selectedDataItems.forEach(function (currentItem) {\n      var itemId = idGetter(currentItem);\n      selectionState[itemId] = cell ? selectedColumns_1.slice() : true;\n    });\n  } else {\n    if (ctrlKey || metaKey || isInputEvent) {\n      LAST_SELECTION_STATE[componentId] = {\n        rowIndex: startRowIndex,\n        colIndex: startColIndex\n      };\n      var selectedDataItems = dataItems.slice(startRowIndex, endRowIndex + 1);\n      var currentDataItem = selectedDataItems[0];\n      var itemId = idGetter(currentDataItem);\n      selectionState = __assign({}, prevSelectedState);\n      selectionState[itemId] = cell && !isInputEvent ? getCellSelection(selectionState[itemId], startColIndex) : !selectionState[itemId];\n    } else if (shiftKey) {\n      var lastRowIndex = LAST_SELECTION_STATE[componentId] && LAST_SELECTION_STATE[componentId].rowIndex || 0;\n      var lastColIndex = LAST_SELECTION_STATE[componentId] && LAST_SELECTION_STATE[componentId].colIndex || 0;\n      var currentStartRowIndex = Math.min(lastRowIndex, startRowIndex, endRowIndex);\n      var currentEndRowIndex = Math.max(lastRowIndex, startRowIndex, endRowIndex);\n      var currentStarColIndex = Math.min(lastColIndex, startColIndex, endColIndex);\n      var currentEndColIndex = Math.max(lastColIndex, startColIndex, endColIndex);\n      var selectedColumns_2 = [];\n\n      for (var i = currentStarColIndex; i <= currentEndColIndex; i++) {\n        selectedColumns_2.push(i);\n      }\n\n      var selectedDataItems = dataItems.slice(currentStartRowIndex, currentEndRowIndex + 1);\n      selectedDataItems.forEach(function (currentItem) {\n        var itemId = idGetter(currentItem);\n        selectionState[itemId] = cell ? selectedColumns_2.slice() : true;\n      });\n    }\n  }\n\n  return selectionState;\n};\n/** @hidden */\n\nexport var hasRelativeStackingContext = function () {\n  if (!canUseDOM || !document.body) {\n    return false;\n  }\n\n  var top = 10;\n  var parent = document.createElement('div');\n  parent.style.transform = 'matrix(10, 0, 0, 10, 0, 0)';\n  parent.innerHTML = \"<div style=\\\"position: fixed; top: \" + top + \"px;\\\">child</div>\";\n  document.body.appendChild(parent);\n  var isDifferent = parent.children[0].getBoundingClientRect().top !== top;\n  document.body.removeChild(parent);\n  return isDifferent;\n};\n/** @hidden */\n\nexport var HAS_RELATIVE_STACKING_CONTEXT = hasRelativeStackingContext();\n/** @hidden */\n\nexport var relativeContextElement = function (element) {\n  if (!element || !HAS_RELATIVE_STACKING_CONTEXT) {\n    return null;\n  }\n\n  var node = element.parentElement;\n\n  while (node) {\n    if (window.getComputedStyle(node).transform !== 'none') {\n      return node;\n    }\n\n    node = node.parentElement;\n  }\n};\n/** @hidden */\n\nexport var getOffset = function (offsetParent) {\n  if (offsetParent && offsetParent.ownerDocument) {\n    if (offsetParent !== offsetParent.ownerDocument.body) {\n      var rect = offsetParent.getBoundingClientRect();\n      return {\n        left: rect.left - offsetParent.scrollLeft,\n        top: rect.top - offsetParent.scrollTop\n      };\n    }\n  }\n\n  return {\n    left: 0,\n    top: 0\n  };\n};\n/** @hidden */\n\nexport var getSelectionOptions = function (selectable) {\n  var enabled = selectable ? typeof selectable.enabled === 'boolean' ? selectable.enabled : true : false;\n  var drag = selectable ? Boolean(selectable.drag) : false;\n  var mode = selectable && selectable.mode ? selectable.mode : 'multiple';\n  var cell = Boolean(selectable && selectable.cell);\n  return {\n    enabled: enabled,\n    drag: drag,\n    mode: mode,\n    cell: cell\n  };\n};","map":{"version":3,"sources":["../../../src/selection/utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { canUseDOM, extendDataItem, getter, Keys, mapTree } from '@progress/kendo-react-common';\nimport { TABLE_COL_INDEX_ATTRIBUTE, TABLE_ROW_INDEX_ATTRIBUTE } from './constants';\nvar GROUP_SUBITEMS_COLLECTION = 'items';\nvar LAST_SELECTION_STATE = {};\nvar getCellSelection = function (currentSelection, selectedColumn) {\n    if (!currentSelection || (Array.isArray(currentSelection) && currentSelection.length === 0)) {\n        return [selectedColumn];\n    }\n    else {\n        var foundIndex = currentSelection.findIndex(function (columnIndex) { return columnIndex === selectedColumn; });\n        if (foundIndex > -1) {\n            return currentSelection.filter(function (columnIndex) { return columnIndex === selectedColumn; });\n        }\n        else {\n            return currentSelection.concat([selectedColumn]);\n        }\n    }\n};\n/** @hidden */\nexport var closestTagName = function (target, tagName) {\n    var currentTarget = target;\n    while (currentTarget) {\n        if (currentTarget.tagName === tagName) {\n            return currentTarget;\n        }\n        else if (currentTarget.tagName === 'TABLE') {\n            return null;\n        }\n        currentTarget = currentTarget.parentElement;\n    }\n    return null;\n};\n/** @hidden */\nexport var getRowIndex = function (element) {\n    if (!element) {\n        return;\n    }\n    var rowIndex = element.getAttribute(TABLE_ROW_INDEX_ATTRIBUTE);\n    return rowIndex ? parseInt(rowIndex, 10) : undefined;\n};\n/** @hidden */\nexport var getColumnIndex = function (element) {\n    if (!element) {\n        return;\n    }\n    var colIndex = element.getAttribute(TABLE_COL_INDEX_ATTRIBUTE);\n    return colIndex ? parseInt(colIndex, 10) : undefined;\n};\n/**\n * @hidden\n *\n * Apply the selected field to the data items based on the selected state.\n *\n * @param {{data: any, selectedState:  {[id: string]: boolean | number[]}, dataItemKey: string; selectedField: string; subItemsField?: string; }} options\n * @returns {any[]}\n */\nexport var setSelectedState = function (options) {\n    var subItemsField = options.subItemsField || GROUP_SUBITEMS_COLLECTION;\n    var idGetter = getter(options.dataItemKey);\n    return mapTree(options.data, subItemsField, function (item) {\n        var _a;\n        return extendDataItem(item, subItemsField, (_a = {},\n            _a[options.selectedField] = options.selectedState[idGetter(item)],\n            _a));\n    });\n};\n/**\n * Get selected state from the component KeyDown event.\n *\n * @param {{event: TableKeyDownEvent, selectedState:  {[id: string]: boolean | number[]}, dataItemKey: string}} options\n * @returns {{[id: string]: boolean | number[]}} - The new selected state.\n */\nexport var getSelectedStateFromKeyDown = function (options) {\n    var event = options.event, dataItemKey = options.dataItemKey, selectedState = options.selectedState;\n    var syntheticEvent = event.syntheticEvent, nativeEvent = event.nativeEvent, dataItems = event.dataItems, componentId = event.componentId, mode = event.mode, cell = event.cell, selectedField = event.selectedField;\n    var target = nativeEvent.target, ctrlKey = nativeEvent.ctrlKey, metaKey = nativeEvent.metaKey, altKey = nativeEvent.altKey, shiftKey = nativeEvent.shiftKey;\n    if (syntheticEvent.isDefaultPrevented() || nativeEvent.keyCode !== Keys.enter) {\n        return selectedState;\n    }\n    var tdElement = closestTagName(target, 'TD');\n    var trElement = closestTagName(target, 'TR');\n    var colIndex = getColumnIndex(tdElement);\n    var rowIndex = getRowIndex(trElement);\n    var selectionState = {};\n    if (tdElement && trElement && rowIndex !== undefined && colIndex !== undefined) {\n        selectionState = getSelectedState({\n            selectedState: selectedState,\n            dataItemKey: dataItemKey,\n            event: {\n                ctrlKey: ctrlKey, metaKey: metaKey, altKey: altKey, shiftKey: shiftKey,\n                dataItems: dataItems, cell: cell, mode: mode, selectedField: selectedField, componentId: componentId,\n                startColIndex: colIndex, endColIndex: colIndex, startRowIndex: rowIndex, endRowIndex: rowIndex,\n                isDrag: false,\n                syntheticEvent: syntheticEvent,\n                nativeEvent: nativeEvent,\n                target: event.target,\n                dataItem: null\n            }\n        });\n    }\n    return selectionState;\n};\n/**\n * Get selected state from the component selection event.\n *\n * @param {{event: TableSelectionChangeEvent, selectedState:  {[id: string]: boolean | number[]}, dataItemKey: string}} options\n * @returns {{[id: string]: boolean | number[]}} - The new selected state.\n */\nexport var getSelectedState = function (options) {\n    var event = options.event, dataItemKey = options.dataItemKey, prevSelectedState = options.selectedState;\n    var dataItems = event.dataItems, startRowIndex = event.startRowIndex, endRowIndex = event.endRowIndex, startColIndex = event.startColIndex, endColIndex = event.endColIndex, cell = event.cell, isDrag = event.isDrag, ctrlKey = event.ctrlKey, shiftKey = event.shiftKey, metaKey = event.metaKey, componentId = event.componentId, mode = event.mode, dataItem = event.dataItem;\n    var idGetter = getter(dataItemKey);\n    var selectionState = {};\n    var isInputEvent = dataItem !== null;\n    if (mode === 'single') {\n        var currentDataItem = dataItems.slice(startRowIndex, startRowIndex + 1)[0];\n        var itemId = idGetter(currentDataItem);\n        LAST_SELECTION_STATE[componentId] = {\n            rowIndex: startRowIndex,\n            colIndex: startColIndex\n        };\n        selectionState[itemId] = cell ? [startColIndex] : true;\n    }\n    else if (isDrag || (!shiftKey && !ctrlKey && !metaKey && !isInputEvent)) {\n        if (!isDrag) {\n            LAST_SELECTION_STATE[componentId] = {\n                rowIndex: startRowIndex,\n                colIndex: startColIndex\n            };\n        }\n        var selectedColumns_1 = [];\n        for (var i = startColIndex; i <= endColIndex; i++) {\n            selectedColumns_1.push(i);\n        }\n        var selectedDataItems = dataItems.slice(startRowIndex, endRowIndex + 1);\n        selectedDataItems.forEach(function (currentItem) {\n            var itemId = idGetter(currentItem);\n            selectionState[itemId] = cell ? selectedColumns_1.slice() : true;\n        });\n    }\n    else {\n        if (ctrlKey || metaKey || isInputEvent) {\n            LAST_SELECTION_STATE[componentId] = {\n                rowIndex: startRowIndex,\n                colIndex: startColIndex\n            };\n            var selectedDataItems = dataItems.slice(startRowIndex, endRowIndex + 1);\n            var currentDataItem = selectedDataItems[0];\n            var itemId = idGetter(currentDataItem);\n            selectionState = __assign({}, prevSelectedState);\n            selectionState[itemId] = cell && !isInputEvent ? getCellSelection(selectionState[itemId], startColIndex) : !selectionState[itemId];\n        }\n        else if (shiftKey) {\n            var lastRowIndex = (LAST_SELECTION_STATE[componentId] && LAST_SELECTION_STATE[componentId].rowIndex) || 0;\n            var lastColIndex = (LAST_SELECTION_STATE[componentId] && LAST_SELECTION_STATE[componentId].colIndex) || 0;\n            var currentStartRowIndex = Math.min(lastRowIndex, startRowIndex, endRowIndex);\n            var currentEndRowIndex = Math.max(lastRowIndex, startRowIndex, endRowIndex);\n            var currentStarColIndex = Math.min(lastColIndex, startColIndex, endColIndex);\n            var currentEndColIndex = Math.max(lastColIndex, startColIndex, endColIndex);\n            var selectedColumns_2 = [];\n            for (var i = currentStarColIndex; i <= currentEndColIndex; i++) {\n                selectedColumns_2.push(i);\n            }\n            var selectedDataItems = dataItems.slice(currentStartRowIndex, currentEndRowIndex + 1);\n            selectedDataItems.forEach(function (currentItem) {\n                var itemId = idGetter(currentItem);\n                selectionState[itemId] = cell ? selectedColumns_2.slice() : true;\n            });\n        }\n    }\n    return selectionState;\n};\n/** @hidden */\nexport var hasRelativeStackingContext = function () {\n    if (!canUseDOM || !document.body) {\n        return false;\n    }\n    var top = 10;\n    var parent = document.createElement('div');\n    parent.style.transform = 'matrix(10, 0, 0, 10, 0, 0)';\n    parent.innerHTML = \"<div style=\\\"position: fixed; top: \" + top + \"px;\\\">child</div>\";\n    document.body.appendChild(parent);\n    var isDifferent = parent.children[0].getBoundingClientRect().top !== top;\n    document.body.removeChild(parent);\n    return isDifferent;\n};\n/** @hidden */\nexport var HAS_RELATIVE_STACKING_CONTEXT = hasRelativeStackingContext();\n/** @hidden */\nexport var relativeContextElement = function (element) {\n    if (!element || !HAS_RELATIVE_STACKING_CONTEXT) {\n        return null;\n    }\n    var node = element.parentElement;\n    while (node) {\n        if (window.getComputedStyle(node).transform !== 'none') {\n            return node;\n        }\n        node = node.parentElement;\n    }\n};\n/** @hidden */\nexport var getOffset = function (offsetParent) {\n    if (offsetParent && offsetParent.ownerDocument) {\n        if (offsetParent !== offsetParent.ownerDocument.body) {\n            var rect = offsetParent.getBoundingClientRect();\n            return {\n                left: rect.left - offsetParent.scrollLeft,\n                top: rect.top - offsetParent.scrollTop\n            };\n        }\n    }\n    return { left: 0, top: 0 };\n};\n/** @hidden */\nexport var getSelectionOptions = function (selectable) {\n    var enabled = selectable ?\n        (typeof selectable.enabled === 'boolean' ? selectable.enabled : true) :\n        false;\n    var drag = selectable ? Boolean(selectable.drag) : false;\n    var mode = selectable && selectable.mode ? selectable.mode : 'multiple';\n    var cell = Boolean(selectable && selectable.cell);\n    return { enabled: enabled, drag: drag, mode: mode, cell: cell };\n};\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}