{"ast":null,"code":"var _jsxFileName = \"D:\\\\Castro\\\\Development\\\\hr-management-portal\\\\hr-management-portal\\\\src\\\\uploadUser.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserUpload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedFile: null\n    };\n\n    this.onFileChange = event => {\n      let fileType = event.target.files[0].type;\n      let fileSize = event.target.files[0].size;\n      const actualFileSize = Math.round(fileSize / 1024);\n\n      if (fileType === \"application/vnd.ms-excel\") {\n        if (actualFileSize <= 2048) {\n          this.setState({\n            selectedFile: event.target.files[0]\n          });\n        } else {\n          this.setState({\n            selectedFile: null\n          });\n          alert(\"File too big, please select a file lesser than 2mb\");\n        }\n      } else {\n        this.setState({\n          selectedFile: null\n        });\n        alert(\"File format not supported, please select only CSV file\");\n      }\n    };\n\n    this.onFileUpload = () => {\n      const formData = new FormData();\n      formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name);\n      console.log(this.state.selectedFile);\n\n      const sendPostRequest = async () => {\n        try {\n          const resp = await axios.post('https://nphc-hr.free.beeceptor.com/employees/upload', formData);\n          alert(resp.status);\n        } catch (err) {\n          // Handle Error Here\n          alert(err);\n        }\n      };\n\n      sendPostRequest();\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified:\", \" \", this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Please select file before pressing the upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fileUploadContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          children: \"Upload!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), this.fileData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserUpload;","map":{"version":3,"sources":["D:/Castro/Development/hr-management-portal/hr-management-portal/src/uploadUser.js"],"names":["React","Component","axios","XLSX","UserUpload","state","selectedFile","onFileChange","event","fileType","target","files","type","fileSize","size","actualFileSize","Math","round","setState","alert","onFileUpload","formData","FormData","append","name","console","log","sendPostRequest","resp","post","status","err","fileData","lastModifiedDate","toDateString","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'; \r\nimport axios from 'axios';\r\nimport * as XLSX from 'xlsx';\r\n\r\nclass UserUpload extends Component { \r\n\r\n    state = { \r\n      selectedFile: null\r\n    }; \r\n     \r\n    onFileChange = event => {\r\n        let fileType = event.target.files[0].type;\r\n        let fileSize = event.target.files[0].size;\r\n        const actualFileSize = Math.round((fileSize / 1024));\r\n        if (fileType === \"application/vnd.ms-excel\") {\r\n            if (actualFileSize <= 2048) {\r\n                this.setState({ selectedFile: event.target.files[0] });\r\n            }\r\n            else {\r\n                this.setState({ selectedFile: null });\r\n                alert(\"File too big, please select a file lesser than 2mb\");\r\n            }\r\n        }\r\n        else {\r\n            this.setState({ selectedFile: null });\r\n            alert(\"File format not supported, please select only CSV file\");\r\n        }\r\n    };\r\n     \r\n    onFileUpload = () => {\r\n\r\n     \r\n     \r\n        \r\n        const formData = new FormData();\r\n\r\n        formData.append(\r\n            \"myFile\",\r\n            this.state.selectedFile,\r\n            this.state.selectedFile.name\r\n        );\r\n\r\n        console.log(this.state.selectedFile);\r\n\r\n        const sendPostRequest = async () => {\r\n            try {\r\n                const resp = await axios.post('https://nphc-hr.free.beeceptor.com/employees/upload', formData);\r\n                alert(resp.status);\r\n            } catch (err) {\r\n                // Handle Error Here\r\n                alert(err);\r\n            }\r\n        };\r\n\r\n        sendPostRequest();\r\n\r\n    };\r\n\r\n    \r\n     \r\n    // File content to be displayed after \r\n    fileData = () => { \r\n      if (this.state.selectedFile) { \r\n          \r\n        return ( \r\n          <div> \r\n            <h2>File Details:</h2> \r\n            <p>File Name: {this.state.selectedFile.name}</p> \r\n            <p>File Type: {this.state.selectedFile.type}</p> \r\n            <p> \r\n              Last Modified:{\" \"} \r\n              {this.state.selectedFile.lastModifiedDate.toDateString()} \r\n            </p> \r\n          </div> \r\n        ); \r\n      } else { \r\n        return ( \r\n          <div> \r\n            <br /> \r\n            <h4>Please select file before pressing the upload button</h4> \r\n          </div> \r\n        ); \r\n      } \r\n    }; \r\n     \r\n    render() {\r\n        return (\r\n            <div className=\"fileUploadContainer\">\r\n                <div>\r\n                    <input type=\"file\" onChange={this.onFileChange} />\r\n                    <button onClick={this.onFileUpload}>\r\n                        Upload!\r\n                    </button>\r\n                </div>\r\n                {this.fileData()}\r\n            </div>\r\n        );\r\n    }\r\n  } \r\n  \r\n \r\n\r\nexport default UserUpload; \r\n"]},"metadata":{},"sourceType":"module"}