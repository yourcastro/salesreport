{"ast":null,"code":"define([\"../core\", \"../var/document\", \"../core/readyException\", \"../deferred\"], function (jQuery, document) {\n  \"use strict\"; // The deferred used on DOM ready\n\n  var readyList = jQuery.Deferred();\n\n  jQuery.fn.ready = function (fn) {\n    readyList.then(fn) // Wrap jQuery.readyException in a function so that the lookup\n    // happens at the time of error handling instead of callback\n    // registration.\n    .catch(function (error) {\n      jQuery.readyException(error);\n    });\n    return this;\n  };\n\n  jQuery.extend({\n    // Is the DOM ready to be used? Set to true once it occurs.\n    isReady: false,\n    // A counter to track how many items to wait for before\n    // the ready event fires. See #6781\n    readyWait: 1,\n    // Handle when the DOM is ready\n    ready: function (wait) {\n      // Abort if there are pending holds or we're already ready\n      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n        return;\n      } // Remember that the DOM is ready\n\n\n      jQuery.isReady = true; // If a normal DOM Ready event fired, decrement, and wait if need be\n\n      if (wait !== true && --jQuery.readyWait > 0) {\n        return;\n      } // If there are functions bound, to execute\n\n\n      readyList.resolveWith(document, [jQuery]);\n    }\n  });\n  jQuery.ready.then = readyList.then; // The ready event handler and self cleanup method\n\n  function completed() {\n    document.removeEventListener(\"DOMContentLoaded\", completed);\n    window.removeEventListener(\"load\", completed);\n    jQuery.ready();\n  } // Catch cases where $(document).ready() is called\n  // after the browser event has already occurred.\n  // Support: IE <=9 - 10 only\n  // Older IE sometimes signals \"interactive\" too soon\n\n\n  if (document.readyState === \"complete\" || document.readyState !== \"loading\" && !document.documentElement.doScroll) {\n    // Handle it asynchronously to allow scripts the opportunity to delay ready\n    window.setTimeout(jQuery.ready);\n  } else {\n    // Use the handy event callback\n    document.addEventListener(\"DOMContentLoaded\", completed); // A fallback to window.onload, that will always work\n\n    window.addEventListener(\"load\", completed);\n  }\n});","map":{"version":3,"sources":["D:/Castro/Development/hr-management-portal/hr-management-portal/node_modules/jquery/src/core/ready.js"],"names":["define","jQuery","document","readyList","Deferred","fn","ready","then","catch","error","readyException","extend","isReady","readyWait","wait","resolveWith","completed","removeEventListener","window","readyState","documentElement","doScroll","setTimeout","addEventListener"],"mappings":"AAAAA,MAAM,CAAE,CACP,SADO,EAEP,iBAFO,EAGP,wBAHO,EAIP,aAJO,CAAF,EAKH,UAAUC,MAAV,EAAkBC,QAAlB,EAA6B;AAEhC,eAFgC,CAIhC;;AACA,MAAIC,SAAS,GAAGF,MAAM,CAACG,QAAP,EAAhB;;AAEAH,EAAAA,MAAM,CAACI,EAAP,CAAUC,KAAV,GAAkB,UAAUD,EAAV,EAAe;AAEhCF,IAAAA,SAAS,CACPI,IADF,CACQF,EADR,EAGC;AACA;AACA;AALD,KAMEG,KANF,CAMS,UAAUC,KAAV,EAAkB;AACzBR,MAAAA,MAAM,CAACS,cAAP,CAAuBD,KAAvB;AACA,KARF;AAUA,WAAO,IAAP;AACA,GAbD;;AAeAR,EAAAA,MAAM,CAACU,MAAP,CAAe;AAEd;AACAC,IAAAA,OAAO,EAAE,KAHK;AAKd;AACA;AACAC,IAAAA,SAAS,EAAE,CAPG;AASd;AACAP,IAAAA,KAAK,EAAE,UAAUQ,IAAV,EAAiB;AAEvB;AACA,UAAKA,IAAI,KAAK,IAAT,GAAgB,EAAEb,MAAM,CAACY,SAAzB,GAAqCZ,MAAM,CAACW,OAAjD,EAA2D;AAC1D;AACA,OALsB,CAOvB;;;AACAX,MAAAA,MAAM,CAACW,OAAP,GAAiB,IAAjB,CARuB,CAUvB;;AACA,UAAKE,IAAI,KAAK,IAAT,IAAiB,EAAEb,MAAM,CAACY,SAAT,GAAqB,CAA3C,EAA+C;AAC9C;AACA,OAbsB,CAevB;;;AACAV,MAAAA,SAAS,CAACY,WAAV,CAAuBb,QAAvB,EAAiC,CAAED,MAAF,CAAjC;AACA;AA3Ba,GAAf;AA8BAA,EAAAA,MAAM,CAACK,KAAP,CAAaC,IAAb,GAAoBJ,SAAS,CAACI,IAA9B,CApDgC,CAsDhC;;AACA,WAASS,SAAT,GAAqB;AACpBd,IAAAA,QAAQ,CAACe,mBAAT,CAA8B,kBAA9B,EAAkDD,SAAlD;AACAE,IAAAA,MAAM,CAACD,mBAAP,CAA4B,MAA5B,EAAoCD,SAApC;AACAf,IAAAA,MAAM,CAACK,KAAP;AACA,GA3D+B,CA6DhC;AACA;AACA;AACA;;;AACA,MAAKJ,QAAQ,CAACiB,UAAT,KAAwB,UAAxB,IACFjB,QAAQ,CAACiB,UAAT,KAAwB,SAAxB,IAAqC,CAACjB,QAAQ,CAACkB,eAAT,CAAyBC,QADlE,EAC+E;AAE9E;AACAH,IAAAA,MAAM,CAACI,UAAP,CAAmBrB,MAAM,CAACK,KAA1B;AAEA,GAND,MAMO;AAEN;AACAJ,IAAAA,QAAQ,CAACqB,gBAAT,CAA2B,kBAA3B,EAA+CP,SAA/C,EAHM,CAKN;;AACAE,IAAAA,MAAM,CAACK,gBAAP,CAAyB,MAAzB,EAAiCP,SAAjC;AACA;AAEA,CArFK,CAAN","sourcesContent":["define( [\n\t\"../core\",\n\t\"../var/document\",\n\t\"../core/readyException\",\n\t\"../deferred\"\n], function( jQuery, document ) {\n\n\"use strict\";\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n} );\n"]},"metadata":{},"sourceType":"script"}