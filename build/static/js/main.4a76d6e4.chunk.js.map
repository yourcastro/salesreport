{"version":3,"sources":["uploadUser.js","employeeMockData.js","employeeDashboard.js","employeeCRUD.js","employeeAbout.js","App.js","index.js"],"names":["UserUpload","state","selectedFile","allEmployee","onFileChange","event","fileType","target","files","type","fileSize","size","actualFileSize","Math","round","setState","alert","onFileValidationNUpdate","validationCounter","f","reader","FileReader","onload","evt","bstr","result","wb","XLSX","wsname","SheetNames","ws","Sheets","data","sheet_to_csv","header","employeeDataJSON","convertToJson","parsedJSON","JSON","parse","emp","item","id","find","x","username","updateEmpRecord","createEmpRecord","readAsBinaryString","onFileUpload","axios","post","err","put","formData","FormData","append","name","console","log","a","resp","status","sendPostRequest","fileData","lastModifiedDate","toDateString","get","then","res","employee","csv","lines","split","headers","i","length","obj","currentline","j","push","stringify","className","onChange","this","onClick","Component","mockEmployee","EmployeeDashboard","columns","selector","sortable","title","pagination","paginationRowsPerPageOptions","theme","React","EmployeeCURD","EmployeeAbout","App","href","class","onclick","icon","faBars","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a76d6e4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as XLSX from 'xlsx';\r\n\r\nclass UserUpload extends Component {\r\n\r\n  state = {\r\n    selectedFile: null,\r\n    allEmployee: []\r\n  };\r\n  \r\n\r\n  componentDidMount() {\r\n    //Load All Employees\r\n    axios.get('https://nphc-hr.free.beeceptor.com/employees')\r\n      .then(res => {\r\n        const employee = res.data;\r\n        this.setState({ allEmployee: employee });\r\n      })\r\n  }\r\n\r\n\r\n  onFileChange = event => {\r\n    let fileType = event.target.files[0].type;\r\n    let fileSize = event.target.files[0].size;\r\n    const actualFileSize = Math.round((fileSize / 1024));\r\n    if (fileType === \"application/vnd.ms-excel\") {\r\n      if (actualFileSize <= 2048) {\r\n        this.setState({ selectedFile: event.target.files[0] });\r\n      }\r\n      else {\r\n        this.setState({ selectedFile: null });\r\n        alert(\"File too big, please select a file lesser than 2mb\");\r\n      }\r\n    }\r\n    else {\r\n      this.setState({ selectedFile: null });\r\n      alert(\"File format not supported, please select only CSV file\");\r\n    }\r\n  };\r\n\r\n  convertToJson(csv) {\r\n    var lines = csv.split(\"\\n\");\r\n\r\n    var result = [];\r\n\r\n    var headers = lines[0].split(\",\");\r\n\r\n    for (var i = 1; i < lines.length; i++) {\r\n      var obj = {};\r\n      var currentline = lines[i].split(\",\");\r\n\r\n      for (var j = 0; j < headers.length; j++) {\r\n        obj[headers[j]] = currentline[j];\r\n      }\r\n\r\n      result.push(obj);\r\n    }\r\n\r\n    //return result; //JavaScript object\r\n    return JSON.stringify(result); //JSON\r\n  }\r\n\r\n  onFileValidationNUpdate = () => {\r\n\r\n    //Read data from CSV\r\n    let validationCounter = 0;\r\n    let f = this.state.selectedFile;\r\n    const reader = new FileReader();\r\n    reader.onload = (evt) => {\r\n\r\n      const bstr = evt.target.result;\r\n      const wb = XLSX.read(bstr, { type: \"binary\" });\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n\r\n\r\n      let employeeDataJSON = this.convertToJson(data);\r\n      let parsedJSON = JSON.parse(employeeDataJSON);\r\n      for (let emp in parsedJSON) {\r\n\r\n        let item = parsedJSON[emp];\r\n        if (item && item.id !== \"\") {\r\n\r\n          //Any row starting with “#” is considered a comment and ignored.\r\n          if (item.id !== \"#\") {\r\n            let allEmployeeData = this.state.allEmployee;\r\n            let checkEmpExist = allEmployeeData.find(x => x.id === item.id && x.username === item.username);\r\n            if (checkEmpExist) {\r\n              //Update Emp Record\r\n              this.updateEmpRecord(item);\r\n            }\r\n            else {\r\n              //Create New Emp Record\r\n              this.createEmpRecord(item);\r\n            }\r\n          }\r\n\r\n        }\r\n        else {\r\n          validationCounter++;\r\n        }\r\n      }\r\n\r\n    };\r\n    reader.readAsBinaryString(f);\r\n\r\n    //one or more of the rows fails validation, the entire file is rejected\r\n    if (validationCounter <= 1) {\r\n      this.onFileUpload();\r\n    }\r\n\r\n  };\r\n\r\n\r\n  createEmpRecord = (emp) => {\r\n    try {\r\n      const resp = axios.post('https://nphc-hr.free.beeceptor.com/employees', emp);\r\n      alert('New Employee created');\r\n    } catch (err) {\r\n      // Handle Error Here\r\n      alert('New Employee Service failed ' + err);\r\n    }\r\n  };\r\n\r\n  updateEmpRecord = (emp) => {\r\n    try {\r\n      const resp = axios.put('https://nphc-hr.free.beeceptor.com/employees/' + emp.id, { emp });\r\n      alert('Employee details updated');\r\n    } catch (err) {\r\n      // Handle Error Here\r\n      alert('Employee Update Service failed ' + err);\r\n    }\r\n  };\r\n\r\n\r\n  onFileUpload = () => {\r\n\r\n    // File Upload to Backend\r\n    const formData = new FormData();\r\n\r\n    formData.append(\r\n      \"myFile\",\r\n      this.state.selectedFile,\r\n      this.state.selectedFile.name\r\n    );\r\n\r\n    console.log(this.state.selectedFile);\r\n\r\n    const sendPostRequest = async () => {\r\n      try {\r\n        const resp = await axios.post('https://nphc-hr.free.beeceptor.com/employees/upload', formData);\r\n        alert('File upload sucessfully ' + resp.status);\r\n      } catch (err) {\r\n        // Handle Error Here\r\n        alert('File upload failed ' + err);\r\n      }\r\n    };\r\n\r\n    sendPostRequest();\r\n\r\n  };\r\n\r\n\r\n\r\n  // File content to be displayed after \r\n  fileData = () => {\r\n    if (this.state.selectedFile) {\r\n\r\n      return (\r\n        <div>\r\n          <h2>File Details:</h2>\r\n          <p>File Name: {this.state.selectedFile.name}</p>\r\n          <p>File Type: {this.state.selectedFile.type}</p>\r\n          <p>\r\n            Last Modified:{\" \"}\r\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <br />\r\n          <h4>Please select file before pressing the upload button</h4>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"fileUploadContainer\">\r\n        <div>\r\n          <input type=\"file\" onChange={this.onFileChange} />\r\n          <button onClick={this.onFileValidationNUpdate}>\r\n            Upload\r\n          </button>\r\n        </div>\r\n        {this.fileData()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default UserUpload;\r\n","export const mockEmployee = [{\r\n    \"id\": \"e0001\",\r\n    \"username\": \"hpotter\",\r\n    \"fullName\": \"Harry Potter\",\r\n    \"salary\": \"1234.00\"\r\n  },\r\n  {\r\n    \"id\": \"e0002\",\r\n    \"username\": \"rwesley\",\r\n    \"fullName\": \"Ron Weasley\",\r\n    \"salary\": \"19234.5\"\r\n  },\r\n  {\r\n    \"id\": \"e0003\",\r\n    \"username\": \"ssnape\",\r\n    \"fullName\": \"Severus Snape\",\r\n    \"salary\": \"4000\"\r\n  },\r\n  {\r\n    \"id\": \"e0004\",\r\n    \"username\": \"rhagrid\",\r\n    \"fullName\": \"Rubeus Hagrid\",\r\n    \"salary\": \"3999.999\"\r\n  },\r\n  {\r\n    \"id\": \"e0005\",\r\n    \"username\": \"voldemort\",\r\n    \"fullName\": \"Lord Voldemort\",\r\n    \"salary\": \"523.4\"\r\n  },\r\n  {\r\n    \"id\": \"e0006\",\r\n    \"username\": \"rwesley123\",\r\n    \"fullName\": \"Ron Weasley\",\r\n    \"salary\": \"19234.5\"\r\n  },\r\n  {\r\n    \"id\": \"e0007\",\r\n    \"username\": \"voldeley\",\r\n    \"fullName\": \"Ron volde\",\r\n    \"salary\": \"1234.5\"\r\n  },\r\n  {\r\n    \"id\": \"e0008\",\r\n    \"username\": \"vdeley\",\r\n    \"fullName\": \"volde Ron\",\r\n    \"salary\": \"12500.50\"\r\n  }\r\n\r\n];","import React from 'react';\r\nimport { mockEmployee } from \"./employeeMockData\";\r\nimport DataTable, { createTheme } from 'react-data-table-component';\r\n\r\nclass EmployeeDashboard extends React.Component {\r\n  \r\n  state = {\r\n    data: [...mockEmployee],\r\n    columns:[\r\n      {\r\n        name: 'ID',\r\n        selector: 'id',\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: 'User Name',\r\n        selector: 'username',\r\n        sortable: true\r\n      },\r\n      {\r\n        name: 'Full Name',\r\n        selector: 'fullName',\r\n        sortable: true\r\n      },\r\n      {\r\n        name: 'Salary',\r\n        selector: 'salary',\r\n        sortable: true\r\n      },\r\n      {\r\n        name: 'Action',\r\n        selector: 'action',\r\n        sortable: true\r\n      }\r\n    ]\r\n  };\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  \r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"employeeDashboardConatiner\">\r\n        <DataTable\r\n          title=\"Employees\"\r\n          columns={this.state.columns}\r\n          data={this.state.data}\r\n          pagination={true}\r\n          paginationRowsPerPageOptions={[10, 15, 20, 25, 30]}\r\n          theme=\"default\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default EmployeeDashboard;\r\n\r\n","import React from 'react';\r\n\r\nexport default function EmployeeCURD() {\r\n  return <h2>Employee CURD</h2>;\r\n}","import React from 'react';\r\n\r\nexport default function EmployeeAbout() {\r\n  return (\r\n    <div>\r\n      <img className=\"bannerImg\"></img>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars, faCoffee } from '@fortawesome/free-solid-svg-icons'\n\nimport './App.css';\nimport UploadUser from './uploadUser';\nimport EmployeeDashboard from './employeeDashboard';\nimport EmployeeCRUD from './employeeCRUD';\nimport EmployeeAbout from './employeeAbout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ul className=\"headerMenuContainer desktop-container\">\n        <li><a className=\"active\" href=\"/\">HR Management Portal</a></li>\n        <li className=\"floatRight\"><a href=\"/upload\">Upload Users</a></li>\n        <li className=\"floatRight\"><a href=\"/dashboard\">Employee Dashboard</a></li>\n        <li className=\"floatRight\"><a href=\"/crud\">CRUD Feature</a></li>\n      </ul>\n\n      <div class=\"mobile-container\">\n        <div class=\"topnav\">\n          <a href=\"/\" class=\"active\">HR Management Portal</a>\n          <div id=\"myLinks\">\n            <a href=\"/upload\">Upload Users</a>\n            <a href=\"/dashboard\">Employee Dashboard</a>\n            <a href=\"/crud\">CRUD Feature</a>\n          </div>\n          <a href=\"javascript:void(0);\" class=\"icon\" onclick=\"myFunction()\">\n             <FontAwesomeIcon icon={faBars} />\n          </a>\n        </div>\n      </div>\n\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/upload\">\n            <UploadUser />\n          </Route>\n          <Route path=\"/dashboard\">\n            <EmployeeDashboard />\n          </Route>\n          <Route path=\"/crud\">\n            <EmployeeCRUD />\n          </Route>\n          <Route path=\"/\">\n            <EmployeeAbout />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}